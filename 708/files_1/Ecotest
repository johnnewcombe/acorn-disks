PROGRAM Ecotest;TYPEByte=0..255;Word=0..65535;Min_string=String[80];VARctrl,port,error,blockno:Byte;len,stn,a:Word;ch:Char;data:ARRAY [1..1024] OF Byte;{ 'FSRTN' externals }PROCEDURE PutS(addr:Word;VAR srce:Min_string); EXTERNAL;PROCEDURE GetScr(addr:Word;maxlength:BYTE;VAR dest:Min_string); EXTERNAL;PROCEDURE MidS(VAR text:Min_string;start,length:BYTE); EXTERNAL;FUNCTION Land(a,b:Word):Word;EXTERNAL; {Logical AND (bitwise)}FUNCTION Hi(a:Word):BYTE; EXTERNAL;FUNCTION Lo(a:Word):BYTE; EXTERNAL;FUNCTION Cli(VAR line:Min_string):BYTE;EXTERNAL;PROCEDURE ListOT(a:byte); EXTERNAL;  {List output}FUNCTION ListST:boolean; EXTERNAL;   {List status (TRUE=ready)}FUNCTION Inkey(VAR ch:Char):boolean; EXTERNAL;PROCEDURE Pad(VAR s:Min_string;len:Byte); EXTERNAL;{Econet Externals}PROCEDURE Ecoini; EXTERNAL; {Initialise}PROCEDURE Rxset(VAR blockno:BYTE;port:BYTE;stn,start,length:Word);EXTERNAL;FUNCTION Rxread(blockno:BYTE;VAR ctrl,port:BYTE;VAR stn,length:Word)  :BOOLEAN;EXTERNAL;PROCEDURE Delrx(blockno:BYTE);EXTERNAL;PROCEDURE Ecotx(ctrl,port:byte;stn,start,length:Word;VAR result:byte);  EXTERNAL;BEGINWriteln('Econet External Routine Tester');Ecoini;Writeln('Eco now initialised');Write('Station:');Readln(stn);REPEATWrite('T(ransmit), S(et rx), D(el rx), R(ead rx), Q(uit)');REPEAT UNTIL Inkey(ch);Writeln(ch);CASE ch OF  'T','t':BEGIN    Write('ctrl,port:');    Readln(ctrl,port);    Ecotx(ctrl,port,stn,addr(data),10,error);    Writeln('error=',error:3)  END;  'S','s':BEGIN    Write('port,stn');    Readln(port,a);    Rxset(blockno,port,a,addr(data),100);    Writeln('Blockno=',blockno:4)  END;  'D','d':BEGIN    Write('blockno:');    Readln(blockno);    Delrx(blockno)  END;  'R','r':BEGIN    Write('blockno');    Readln(blockno);    Writeln('Return value=',Rxread(blockno,ctrl,port,a,len));    Writeln('ctrl=',ctrl:4,' port=',port:4,' stn=',a:4,' len=',len:4)  END;  OTHERWISE Writeln('!!')ENDUNTIL (ch='q') OR (ch='Q')END.