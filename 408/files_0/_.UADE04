 :    ********************************* :    *                               * :    * FILE :UADE04                  * :    *                               * :    * PROGRAM :BBC TELESOFT DECODER * :    *                               * :    * DISK :4 LINE DEC              * :    *                               * :    * AUTHOR :MEL                   * :    *                               * :    * DATE CREATED :25/08/81        * :    *                               * :    * DATE CHANGED :08/1/82         * :    *                               * :    * CONTENTS :                    * :    *            CLRSCR             * :    *            GETCOM             * :    *            ADJDSP             * :    *            REVEAL             * :    ********************************* : : :    TWO ENTRIES TO THIS ROUTINE :    ALLLOW ALL THE SCREEN TO BE :    CLEARED OR ALL BUT THE TOP :    ROW . THE TOP ROW CONTAINS :    THE PAGE HEADERS : :    CLRALL DOES IT ALL :    CLRSCR FROM LINE ONE :    THIS LEAVES THE HEADER ROW :    FREE  : :    INPUTS - : :    OUTPUTS - : :    REGISTERS USED : A , Y : : :CLRALL LDYIM $00   DON'T LEAVE HEADER LINE : BEQ CLERIN   CHEAP JUMP TO MAIN CODE : : :CLRSCR LDYIM $28  SKIP HEADER LINE : : :CLERIN LDAIM SCRST /  TOP BYTE OF VDU : STAZ ONEQTR +01  SAVE IN BASE ADDRESS : LDAIM $00  CLEAR THE BOTTOM BYTE : STAZ ONEQTR  AND USE ZERO FOR VDU FILL : :CLRONE STAIY ONEQTR  LOAD ZEROS INTO FIRST : INY  256 BYTES OF RAM : BNE CLRONE  LOOP : : INC ONEQTR +01  POINT TO NEXT 256 : :CLRTWO STAIY ONEQTR  NOW SECOND QUARTER : INY : BNE CLRTWO : : INC ONEQTR +01  POINT TO NEXT QUARTER : :CLRTHR STAIY ONEQTR : INY : BNE CLRTHR : : INC ONEQTR +01  POINT TO LAST QUARTER : :CLRFOR STAIY ONEQTR : INY : BNE CLRFOR : RTS : :   ((END OF CLRSCR : : : :    GET COMMANDS FROM SCREEN :    INPUTS CHARACTERS :    AND BUILDS UP A PAGE NUMBER :    AND/OR SWITCHES STATES :    FROM STANDARD DECODER TO :    TELESOFTWARE VARIANTS : :    16/10/81 :    NEW OPTIONS AVAILABLE :    ARE SAVE AND RETRIEVE PAGES :    REVEAL , DISPLAY LAST PAGE : : : :    INPUTS -  : :    OUTPUTS - THE SEARCH BYTES ARE LOADED :              AND SWITCH STATE IS SET : : :GETCOM LDAIM $7E    NOW RESET ANY ESCAPE : JSR OSBYTE     CHANGED FOR THE PROTON : LDAIM SCRST   SET TEMP TOP CURSOR : STAZ DSTADD : LDAIM SCRST / : STAZ DSTADD +01 : LDYIM $00    RESET THE CURSOR POS'N : : LDXIM $00  INDEX TO SEARCH BYTE STRING : :GCOMA JSR OSRDCH  GET A CHAR : CMPIM 'A  IS IT TYPE A TELESOFT : BNE GCOMB  NO CONTINUE : JSR BDEMOD    DISPLAY THE MODE : JSR ADINIT  YES DO INIT : JMP GETCOM  AND GET ANOTHER COMMAND : :GCOMB CMPIM 'Q   QUIT : BNE GCOMC  NO TRY ANOTHER CHAR : LDAIM CLEAR  Clear the screen to save rubbish : JSR OSWRCH : PLA : PLA   SLURP RETURN ADDRESS - GET BACKBASIC RETURN : RTS : : :GCOMC CMPIM '    CHECK NOT SPACE : BNE GCOMD   FOR RESET TO NORMAL : JSR NORMOD   DISPLAY NORMAL MODE : LDAIM $00  IF YES SET SWITCH HERE : STAZ SWITCH  AND LEAVE THE REST : JMP GETCOM  GET ANOTHER COMMAND : :GCOMD CMPIM 'R   CHECK NOT REVEAL : BNE GCOME : JSR REVEAL : JMP GETCOM : :GCOME CMPIM 'S   SAVE PAGE ON DISK : BNE GCOMF : JSR PSEMOD    SHOW IT : JSR DISPAG    CREATE THE FILE NAME : JSR FILSAV : JMP GETCOM : :GCOMF CMPIM 'L    RETRIEVE A FILE FROM DISK : BNE GCOMG : JSR PREMOD : JSR PREMIN : JMP GETCOM : :GCOMG CMPIM 'H  Help display : BNE GCOMR : JSR HELP : JMP GETCOM : : :GCOMR STAIY DSTADD   ECHO ON TELETEXT DISPLAY : INY    POINT TO NEXT CHAR POS'N : SEC  NOW CHECK NUMERIC : SBCIM $3A  FIRST NOT ABOVE ASC 9 : BPL GETCOM  WRONG SO START AGAIN : CLC : ADCIM $0A  CHECK IN RANGE 0-9 : BMI GETCOM  WRONG SO START AGAIN : STAZX MAGSC  PUT THE DIGIT INTO SEARCH STRING : INX  POINT TO NEXT SEARCH BYTE : CPXIM $03  CHECK NOT GOT 3 CHARS : BCC GCOMA  ALLOW CURSOR TO MOVE ON : : LDAZ SWITCH   WHAT MODE : CMPIM $03   ARE WE TO RETRIEVE A PAGE : BEQ RTRTRT : RTS : :RTRTRT JSR DISPAG    NOW CREATE THE FILE NAME : JSR FILFET     AND FETCH IT : JMP GETCOM    LOOP : :    PERHAPS AN RTS AT THIS POINT : : : :ADINIT LDAIM $01  SETUP FOR BBC TELESOFTWARE : STAZ SWITCH  FOR PAGE ACTION : STAZ DECSWI   PUT INTO INITIAL DECODE STATE : LDAIM TEXTBF /  SET UP TEXT BUFFER ADDRESS : STAZ CUROUT +01 : LDAIM $00  LOW BYTE : STAZ CUROUT : STAZ COPPTR  RESET THE INDEX : RTS  ALL INPUT POINTERS SET AT EACH :         PAGE END : :     NOTE FOR OTHER FORMATS OF :     TELESOFTWARE CTINIT WILL BE NEEDED : :PREMIN LDAIM $03 : STAZ SWITCH : RTS :    ((END OF GETCOM : : : :    ADJUST DISPLAY FOR DOUBLE HEIGHT : :    THE PROGRAM READS THROUGH EACH ROW :    AND LOOKS FOR A DOUBLE HEIGHT CHAR :    IF FOUND IT TRANSFERS ALL THE  :    BYTES OF THAT ROW TO THE NEXT : : :ADJDSP LDA SCRST +28 : CMPIM '|  Test for TELESOFTWARE : BNE OLDADJ : LDA SCRST +29 : ANDIM $7F  Zap top bit : CMPIM 'S  |S is probably a sufficient test : BNE OLDADJ : LDAIM $07  o.k. so bleep and initialise : JSR OSWRCH : JSR BDEMOD : JSR ADINIT : RTS :OLDADJ LDAIM SCRST /  SET UP THE TWO ROW BASES : STAZ LOWLIN +01 : STAZ NXTLIN +01 : LDAIM $00 : TAY   SET THE OFFSET : STAZ LOWLIN : LDAIM $28  SET UP THE NEXT ROW POINTER : STAZ NXTLIN : :ADJDA LDAIY LOWLIN   do GET THE BYTE : CMPIM $0D   if DOUBLE HEIGHT : BNE ADJDD : LDAIM $8D   SET TOP BIT : :ADJDB LDYIM $00   NOW TRANSFER THE WHOLE ROW : :ADJDC LDAIY LOWLIN  PICK UP TOP BYTE : STAIY NXTLIN  LOAD ON NEXT ROW : INY : CPYIM $28   TILL THE NEXT ROW : BNE ADJDC : LDYIM $50  DO A DOUBLE ROW ADD : BNE ADJDE  NASTY JUMP : :ADJDD INY : CPYIM $28  until OFFSET 40 (END OF ROW) : BNE ADJDA : :ADJDE TYA   LOAD THE INDEX AS AN INCREMENT : CLC   AND UPDATE POINTERS : ADCZ LOWLIN   TO POINT TO NEXT ROWS : STAZ LOWLIN : LDAIM $00 : ADCZ LOWLIN +01 : STAZ LOWLIN +01 : TYA : CLC : ADCZ NXTLIN : STAZ NXTLIN : LDAIM $00 : TAY   USE THIS TO RESET THE BASE : ADCZ NXTLIN +01 : STAZ NXTLIN +01 :    NOW A NASTY CHECK FOR END :    OF SCREEN BECAUSE IT IS A NASTY :    PLACE I.E. 7FE8 BECAUSE IT DISPLAYS :    25 * 40 BUT CONTAINS 1024 BYTES :    THE LAST 24 BYTES ARE NOT USED : CMPIM $7F  EXPLICIT TEST : BNE ADJDA  ON BOTH BYTES : LDAZ NXTLIN : CMPIM $E8  FOR END OF DISPLAY : BNE ADJDA : RTS : : :    ((END OF ADJSCR : : :    REVEAL BLAT ALL THE CONCEAL :     CHARS FOUND IN THE PAGE : : :REVEAL LDAIM SCRST /   SET UP A POINTER : STAZ LOWLIN +01  TO THE SCREEN : LDAIM $00 : STAZ LOWLIN : TAY : :RVLA LDAIY LOWLIN : ANDIM $7F   MASK OUT THE PARITY BIT : CMPIM $18    IS IT A CONCEAL CHARACTE : BNE RVLB : LDAIM $20 : STAIY LOWLIN   CHANGE FOR A SPACE : :RVLB INY : BNE RVLA : INCZ LOWLIN +01 : LDAZ LOWLIN +01 : CMPIM TOPSCR / : BNE RVLA : RTS : :   (END OF REVEAL : : : :