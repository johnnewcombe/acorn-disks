 :   THE UNRAVELLER :   VERSION 6 : : :   THIS PROGRAM COPYRIGHT CPU 1981 : : :   DATE 16/10/81 : : :   CHANGE 06/11/81 : :   CHANGE TO PROTON 8/1/82 : :   CHANGED REFS 9/1/82 :   Autoload added ARG 9/2/82 :   Fiddled 2/3/82 ARG & KSJ : : :   AUTHOR MEL : : : :   THIS VERSION IS CALLED "FAX" :    IN IMAGE FORMAT : IT IGNORES ANY ROWS :    WITH FAILED HAMMING CODED BYTES : : :    THIS FILE IS FILE ONE OF SEVERAL FILES :    AND IS CURRENTLY CALLED UADE01 : : : :   THIS PROGRAM READS IN COMPLETE PAGES :   FROM THE ACORN DECODER :   IT ATTEMPTS TO LOOK LIKE A :   STANDARD TELETEXT DECODER : : :   *** STRUCTURE OF THE PROGRAM *** : :   THIS IS A LIST OF THE SECTIONS :   OF THE PROGRAM : :   EXTERNAL ADDRESS REFERENCES : :   INTERNAL ADDRESS REFERENCES : :   PARAMETER BLOCK OFFSETS : :   VIB INTERFACE OFFSETS : :   VDU ADDRESS : :   CONSTANTS : : :   STATIC DATA :      THE HAMMING TABLE : :   SUBROUTINES AND MAIN CODE :   RESIDE IN THE OTHER UADE FILES : : : :   *** EXTERNAL ADDRESSES *** :   *** PROTON ENVIRONMENT CHANGES *** : :OSBYTE * $FFF4     VARIOUS FUNCTIONS DEPENDING UPON VALUE OF ACC :OSRDCH * $FFE0 :RDCVEC * $0210  Vector for OSRDCH :OSWRCH * $FFEE :OSASCI * $FFE3   DOES NEWLINES WITH $0D :SETBRK * $3100  THE BREAK POINT :OSFILE * $FFDD    NOTE USE ACC $80 FOR LOAD :OSCLI * $FFF7   THE COMMAND LIN INTERPRETER :        AND $00 FOR SAVE :      X IS LO PTR , Y IS HI PTR : :   *** INTERNAL ADDRESSES *** : : : :   START OF THE PARAMETER BLOCK :   THIS IS SITUATED IN ZERO PAGE : :PARAM * $0070 :STATUS * PARAM  STATUS  :RDROW * PARAM +01 4BIT DECODER BUFFER ADDR :   NOTE 2ND. BYTE OF RDROW NOT USED :XFRCNT * PARAM +03 :DSTADD * PARAM +04 :MAGSC * PARAM +06 :PTNSC * PARAM +07  PAGE TENS TO SEARCH :PUNSC * PARAM +08  PAGE UNITS TO SEARCH :MAGZRD * PARAM +09  MAG READ IN :ROWRD * PARAM +0A  ROW READ IN :PUNRD * PARAM +0B  PAGE UNITS READ :PTNRD * PARAM +0C  PAGE TENS READ :    THIS BYTE CONTAINS THE ERASE BIT :TMMTN * PARAM +0E  TIME MINS TENS :CTRLA * PARAM +11  CONTAINS MAGA SERIAL BIT :CTRLB * PARAM +12  CONTAINS INT SEQ BIT :TEMP * PARAM +13  TWO BYTES USED : : : :     NOW TELESOFTWRE DATA PRESETS :     POSSIBLY LATER CORESIDENT :     WITH THE DECODER DATA AREAS : :SWITCH * PARAM +15   PAGE ACTION SWITCH :DECSWI * PARAM +16   DECODER ACTION SWITCH : :    STREAM I/O DATA AREAS : :CURINP * PARAM +17   CURRENT INPUT BASE :    TWO BYTES USED :CUROUT * PARAM +19      "    OUTPUT BASE :    TWO BYTES USED :CIPPTR * PARAM +1B    "  I/P POINTER :COPPTR * PARAM +1C    "  O/P POINTER :CIPSTA * PARAM +1D    "  I/P EOF INDIC. : :ONEQTR * PARAM +1E  CLEAR SCREEN BASE :    TWO BYTES USED : : :   Bodge data areas. :   These overlay anything since they are :   used after the rest is finished with : :VECSAV * PARAM :BODPOI * PARAM +02 :YSAV * PARAM +04 : : : :    THE STANDARD DECODER DATA AREAS :    THESE OVERLAY TELESOFTWARE AREAS :    BECAUSE THEY ARE EXCLUSIVE : :LOWLIN * PARAM +16  FIRST LINE POINTER :NXTLIN * PARAM +18  SECOND LINE POINTER :RCOUNT * PARAM +20   Count of useless rows. : :   *** THE DECODER ADDRESSES *** :DECADD * $FC10   CHANGED FOR KIM'S DECODER 12/2/82 :DATFLG * DECADD   THE MASTER STATUS :DATINP * DECADD +02   READ/WRITE :DATSTA * DECADD +01  THE SELECT STATUS :DATCLR * DECADD +03  Status clear : : :   *** VDU ADDRESS *** : :SCRST * $7C00   CHANGED FOR PROTON 8/1/82 :TOPSCR * $8000   NEXT BOUNDARY :HIGSCR * $7FE8   THE REAL END : :   *** TEXT ADDRESS *** : :TEXTBF * $2000    NEW PROTON FILE AREA : :HELPST * $7800   Start of help message : :   *** CONSTANTS *** : :HOME * $1E :CLEAR * $0C : : ORG $7000      NEW PROTON ORIGIN :     ORIGIN IS ABOVE PAGE IN BASIC ENVIRONMENT : : : JMP START    Fixed execute address. : : :   *** THE HAMMING LOOKUP TABLE *** : : :   UPPER NIBBLE 00 : :HAMTAB = $01 : = $FF : = $01 : = $01 : = $FF : = $00 : = $01 : = $FF : = $FF : = $02 : = $01 : = $FF : = $0A : = $FF : = $FF : = $07 : : :   UPPER NIBBLE 01 : : : = $FF : = $00 : = $01 : = $FF : = $00 : = $00 : = $FF : = $00 : = $06 : = $FF : = $FF : = $0B : = $FF : = $00 : = $03 : = $FF : : :   UPPER NIBBLE 02 : : : = $FF : = $0C : = $01 : = $FF : = $04 : = $FF : = $FF : = $07 : = $06 : = $FF : = $FF : = $07 : = $FF : = $07 : = $07 : = $07 : : : :   UPPER NIBBLE 03 : : : = $06 : = $FF : = $FF : = $05 : = $FF : = $00 : = $0D : = $FF : = $06 : = $06 : = $06 : = $FF : = $06 : = $FF : = $FF : = $07 : : :   UPPER NIBBLE 04 : : : = $FF : = $02 : = $01 : = $FF : = $04 : = $FF : = $FF : = $09 : = $02 : = $02 : = $FF : = $02 : = $FF : = $02 : = $03 : = $FF : : :   UPPER NIBBLE 05 : : : = $08 : = $FF : = $FF : = $05 : = $FF : = $00 : = $03 : = $FF : = $FF : = $02 : = $03 : = $FF : = $03 : = $FF : = $03 : = $03 : : :   UPPER NIBBLE 06 : : = $04 : = $FF : = $FF : = $05 : = $04 : = $04 : = $04 : = $FF : = $FF : = $02 : = $0F : = $FF : = $04 : = $FF : = $FF : = $07 : : :   UPPER NIBBLE 07 : : = $FF : = $05 : = $05 : = $05 : = $04 : = $FF : = $FF : = $05 : = $06 : = $FF : = $FF : = $05 : = $FF : = $0E : = $03 : = $FF : : :   UPPER NIBBLE 08 : : = $FF : = $0C : = $01 : = $FF : = $0A : = $FF : = $FF : = $09 : = $0A : = $FF : = $FF : = $0B : = $0A : = $0A : = $0A : = $FF : : : :   UPPER NIBBLE 09 : : = $08 : = $FF : = $FF : = $0B : = $FF : = $00 : = $0D : = $FF : = $FF : = $0B : = $0B : = $0B : = $0A : = $FF : = $FF : = $0B : : :   UPPER NIBBLE 0A : : = $0C : = $0C : = $FF : = $0C : = $FF : = $0C : = $0D : = $FF : = $FF : = $0C : = $0F : = $FF : = $0A : = $FF : = $FF : = $07 : : :   UPPER NIBBLE 0B : : : = $FF : = $0C : = $0D : = $FF : = $0D : = $FF : = $0D : = $0D : = $06 : = $FF : = $FF : = $0B : = $FF : = $0E : = $0D : = $FF : : :   UPPER NIBBLE 0C : : = $08 : = $FF : = $FF : = $09 : = $FF : = $09 : = $09 : = $09 : = $FF : = $02 : = $0F : = $FF : = $0A : = $FF : = $FF : = $09 : : :   UPPER NIBBLE 0D : : = $08 : = $08 : = $08 : = $FF : = $08 : = $FF : = $FF : = $09 : = $08 : = $FF : = $FF : = $0B : = $FF : = $0E : = $03 : = $FF : : :   UPPER NIBBLE 0E : : = $FF : = $0C : = $0F : = $FF : = $04 : = $FF : = $FF : = $09 : = $0F : = $FF : = $0F : = $0F : = $FF : = $0E : = $0F : = $FF : : :   UPPER NIBBLE 0F : : : = $08 : = $FF : = $FF : = $05 : = $FF : = $0E : = $0D : = $FF : = $FF : = $0E : = $0F : = $FF : = $0E : = $0E : = $FF : = $0E : : : :   THE LOW AND HIGH BYTE MULTIPLICATION TABLES : : :ROWBOT = $00  EACH VALUE IS OFFSET*40 : = $28 : = $50 : = $78 : = $A0 : = $C8  5*40 : = $F0 : = $18  TOP BYTE NOW 1 : = $40 : = $68 : = $90  10*40 : = $B8 : = $E0 : = $08  TOP BYTE NOW 2 : = $30 : = $58 : = $80  16*40 : = $A8 : = $D0 : = $F8 : = $20  20*40 TOP BYTE 3 : = $48 : = $70 : = $98 : = $C0   24*40 :  : :   HIGH BYTE OF THE MULTIPLICATION :ROWTOP = $00 : = $00 : = $00 : = $00 : = $00 : = $00 : = $00 : = $01   OFFSET 7 : = $01 : = $01 : = $01 : = $01 : = $01 : = $02   OFFSET 13 : = $02 : = $02 : = $02 : = $02 : = $02 : = $02 : = $03   OFFSET 20 : = $03 : = $03 : = $03 : = $03 : : : : :    ++END OF FILE ONE++ : :