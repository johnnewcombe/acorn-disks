.x||\ passwds|y|u|cNotes on adding Passwords to the SJ Research File Server|u 1. IntroductionFrom version 0.36 of the File Server, it is possible to establish a password file on file server format discs.  This provides each authorised user of the system with a password and auto-boot option, which may be set at any time, and a list of accounts to which the user has access, which may only be set by the system manager.  In addition, the password file defines which user(s) have the 'system privilege' which allows them to alter the password file.  Future versions will allow the system manager to define which directories are set for each user's current directory and library after a log-on.|u 2. New file server commands & facilitiesSeveral new file server functions are introduced to allow use of the new facilities.  There are also several 'side-effects', such as display of user IDs in print banners and the 'already open' error message.|u 2.1 *PASS <old password> <new password>This command is used by individual users to set a password for their used ID.  If there is no password currently set, a null string must be provided, eg. *PASS "" WOMBAT sets the password which was previously null to "WOMBAT".  The password must now be quoted when logging on, eg. *I AM ARG WOMBAT  .  On later versions of the Acorn NFS ROM, it is possible to replace the password with a colon, which will cause the system to prompt for the password to be entered invisibly.|u 2.2 *OPT 4This command allows the user to set an auto-boot option.  When the user logs on, the boot option is checked and may result in some action to the file !BOOT.  Option 0 (*OPT 4,0) means 'Off' and results in no action.  Option 1 produces *LOAD !BOOT, option 2 produces *RUN !BOOT, but the most useful is *EXEC !BOOT, selected by *OPT 4,3 .  The !BOOT file need not be in the users current directory, as the library is searched as usual, allowing a 'message of the day' facility from a common boot file.  If there is no !BOOT file at all when one is required, the somewhat confusing message 'FILE NOT FOUND' will be displayed by the NFS following a *I AM command.  Whilst it may appear that the log-on has failed, the user will in fact be logged on as it is only the auto-boot that has failed.|u 2.3 *USERSThis utility program is now supported, and displays which users are currently logged on to the file server.|u 2.4 *VIEW, *REMOTE, *NOTIFYThe feature of these utilities whereby a user ID may be specified in palce of a station number is now supported : eg. *VIEW FRED.|u 2.5 The file %PASSWORDSThis file, which does not exist in any particular directory, is only 'visible' to system privileged users.  It always exists, and it is only possible to delete it using FSUTIL.  It is however possible to save over the top of it.  The name must be quoted in full, (ie no wildcards) in upper case.  A utility, EDITPASS is provided (as a BASIC program in the library of the utilities disc) to edit the contents of the file (see below).|u 3. Users not in password file / no password fileWhen a user attempts to log-on, the file server searches all the discs for an entry in a password file matching that user.  If one is found, the user is logged-on with his specified account ownership, privilege etc.  If there is no password file on the last disc to be searched, any user that logs on is given access to all accounts and system privilege.  This may be useful in environments where no security is required, and is essential in order for the system manager to log on to set up the password file in the first place.  A message is displayed on the file server screen if a log-on occurs under these circumstances.  If there are password files on all discs, a user who has no entry in any of these files will be logged-on, but will not be granted owner access to any of the accounts.  Operation of the file server with password files on some but not all of the drives is not recomended.At present, when a user logs on the library and current directory are set as follows : Drive 0 is searched for the directory $.LIBRARY, and the root on that drive is selected as library if $.LIBRARY does not exist.  The drive on which the user's password file entry was found is then searched for a directory with the same name as his user ID.  Again, the root is substituted if no such directory is found.|u 4. Setting up a password file - EDITPASSA basic program is provided in the library on the file server utility disc, named "EDITPASS".  This is a screen editor for creating password files, and updating existing ones.  It can at present handle about 150 users, and requires a BBC computer with 32K RAM (Model B or expanded Model A).It is necessary to have system privilege to edit the password file on a disc - if there are no system privileged users, or they have forgotten their passwords, it may be necessary to use FSUTIL to remove the password file from the disc.  If there is no password file, all users have system privilege.When the program is run, there is the option to edit the existing password file, start a brand new file or re-start using data already in RAM.  The latter option is useful to recover the results of an edit session if an error occurs during saving.After the initial file has been selected, the program enters display mode.  Here, all the users are displayed on the screen and the cursor keys may be used to scroll the display.  Users may be added or deleted using the keys 'A' and 'D' respectively.  Typing 'X' enters expanded mode where the user's details may be edited.  To save the finished file, 'S' should be typed in display mode.  To exit with the file on disc unchanged, ESCAPE may be pressed at any time.  Re-running the program and selecting 'contents of current RAM' will recover if ESCAPE is pressed by accident.EDITPASS always works with the currently selected drive : to edit the password file on another drive, use *DIR :<disc name> .4.2 Expanded modeExpanded mode allows the details of each user to be edited.  Users are initially created with no password, boot option 0 and access to no accounts at all.  Keying digits 0,1,2 or 3 will set the boot option to that value.  Keying 'S' toggles System privilege off and on.  Note that there should be at least one system privileged user on the system, or it will not be possible to change the password file.  Keying 'P' prompts for a password, and 'A' prompts for account numbers.  In response to the account number prompt, it is possible to specify a single account, several accounts separated by commas, or a range of accounts eg. 1-55 specifies all accounts from 1 to 55.  If the line starts with a minus sign, the specified account(s) are removed from the user's list, otherwise they are added.  Note that account 0 is a 'system' account as the Root always has account 0.To return to display mode, simply press RETURN.Note that the password and boot option may be set by the users themselves, so need not be set by the system manager.'U' and 'L' in expanded mode refer to the future facility to select default libraries and user root directories, and are currently not supported.|u 5. Adding a password file to existing discs.Discs used under previous versions of the file server will have no password file at all, although it may be possible to save a password file onto them, it will not then be possible to edit that file.  Instead, an empty password file should be created using FSUTIL and then a complete password file created by running EDITPASS.|vNOTE|z that once a password file has been created, that disc should only be used with file servers supporting passwords.  If it is inadvertently used with an old file server, the password file must be cleared (with FSUTIL) before reverting to a 'new' file server.