.x||\  prin5|t3In addition to file access, a standard client must concern itself with printing. For a shared printer, it is necessary to know when the end of a piece of printing has been reached, so that the printer can transfer to printing some other user's documents. Again, CP/M does not have sufficiently strict rules, so we follow the new convention of CP/NET which is to terminate printing with a control-Z character.|w|u6. File Server Software|t3The specification for the file server is quite well defined : the main question is one of the implementation method. The Acorn file server provides a very large range of facilities and there are only a few things which experience has proved to be wrongly designed. One possibility which would be advantageous is to combine the printer server and file server programs, reducing the number of dedicated computers. An additonal advantage is that the printer server can control a queue of files on the disc waiting to be printed. The reason that the Acorn file server does not do this is that the file server program is already very large and difficult to maintain : the extra complexity of a built-in printer server is likely to cause severe difficulties at this stage.|t3It was decided that it was unrealistic to write another file server in machine code, as the Acorn one is. This would take a long time to write, and would be very difficult to maintain later, especially if it is to be modified by someone other than the author. Another commercial requirement is for an early version with a small sub-set of the facilities of the full file server, but with the ability to be expanded into a superior version later. It would be possible to write such a program in most high level languages, but of the two readily available for the machine in question, Pascal was chosen. It would have been possible to use Basic, and indeed it may have been quicker for a simple version since there is no compilation delay each time a new attempt is produced which can take some minutes for this version of Pascal, but the lack of structure in Basic renders it little better than machine code for large programs in respect of ease of maintainance. Also, the speed of the final product will be substantially faster in Pascal.|t3The file server operates by receiving network messages containing commands from client stations. These can either be textual commands as typed by the user, sent for decoding, or numeric codes to request one of the main operations such as loading a file. In each case, the file server will send a reply indicating whether the command was successful or an error occurred. In addition, the reply may request further action if, for example, there is a large quantity of data to transfer and this needs to be done in small sections.|x..gprin6