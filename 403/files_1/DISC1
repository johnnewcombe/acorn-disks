 ; File DISC1 ; ; ; FUNCTION Size(handle:INTEGER):dbl_word ; ; Returns the length of the file as a 4 byte quantity. ; ; ; ********************************* ; SHOULD CHECK FOR VALID HANDLE LATER ; ***********************************SIZE POP H ; Return POP B ; Handle PUSH H CALL ADDR ; Convert handle in BC to FCB addr in DE PUSH D ; In case CP/M slurps it MVI C,23H CALL BDOS ; Compute file size POP D LXI H,21H ; Offset to r0 DAD D MOV E,M MVI D,0 INX H MOV B,M INX H MOV C,M ; Now have 3 bytes in regs CBED (hi to lo). ; Since CP/M Counts in 128 byte records, now shift the whole thing right SRLR C RRAR B RRAR E RRAR D POP H ; Return addr POP PSW ; Returned value slots POP PSW PUSH D PUSH B ; Return value XRA A ; A=0 PCHL ; Jump to return addr ; ; ; ; FUNCTION Dir_first(handle,address:INTEGER):BYTE; ;  ; Performs a CP/M search-for-first function, returning the ; directory code, with the DMA address set as specified. ;DIR_FIRST POP H ; Return POP D ; Address POP B ; Handle PUSH H PUSH X PUSH Y PUSH B MVI C,1AH ; Set DMA code CALL BDOS ; Address in DE ; POP B ; Handle CALL ADDR ; FCB addr to DE MVI C,11H ; Search first CALL BDOS MOV E,A ; Return value XRA A MOV D,A ; Hi byte of return POP Y POP X RET ; ; ; ; ; FUNCTION Dir_next(handle,address:INTEGER):BYTE; ;  ; Performs a CP/M search-for-next function, returning the ; directory code, with the DMA address set as specified. ;DIR_NEXT POP H ; Return POP D ; Address POP B ; Handle PUSH H PUSH X PUSH Y PUSH B MVI C,1AH ; Set DMA code CALL BDOS ; Address in DE ; POP B ; Handle CALL ADDR ; FCB addr to DE MVI C,12H ; Search next CALL BDOS MOV E,A ; Return value XRA A MOV D,A ; Hi byte of return POP Y POP X RET ; ; ; ; ; ADDR - Convert handle no. in BC to FCB addr in DE ;NEWFCBADDR LXI D,FCB ; Temp ************* RET ; ; ; PROCEDURE CLOSE(Handle:INTEGER); ; Close given fileCLOSE POP H POP B PUSH H CALL ADDR MVI C,010H ; Close file PUSH X PUSH Y CALL BDOS POP Y POP X XRA A RET ; ; ; DATA ;temp1 DS 2temp2 DS 2temp3 DS 2 ;FCB DS 24H ; ; ;