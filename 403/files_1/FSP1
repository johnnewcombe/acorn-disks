{ FSP1  File Server Procedures & Functions }External FS::fsp1(1);{$E+ Extended error messages}FUNCTION Hex2$(x:BYTE):$2STRING;VARlo,hi:BYTE;dummy:$2STRING;BEGINlo:=x MOD 16;hi:=x DIV 16;IF lo>9 THEN lo:=lo+7;IF hi>9 THEN hi:=hi+7;dummy:=chr(hi+48);APPEND(dummy,chr(lo+48));hex2$:=dummyEND;PROCEDURE Hex1(digit:NIBBLE);BEGINIF digit<10 THEN WRITE(digit:1) ELSE WRITE(CHR(digit+55))END;PROCEDURE Hex2(val:Byte);BEGINHEX1(val DIV 16);HEX1(val MOD 16)END;PROCEDURE Dbl_print(A:dbl_word);{ Print out double Word }VAR X:1..4;BEGINFOR X:=4 DOWNTO 1 DO HEX2(A[X])END;FUNCTION Dbl_zero(val:dbl_word):BOOLEAN;BEGINdbl_zero:=(val[1]=0) AND (val[2]=0) AND (val[3]=0) AND (val[4]=0)END;FUNCTION Dbl_subt(val1,val2:dbl_word):dbl_word;{returns val1-val2}VARA:1..4;carry:0..1;result:INTEGER;BEGINcarry:=0;FOR A:=1 TO 4 DO BEGIN  result:=val1[A]-val2[A]-carry;  IF result<0 THEN BEGIN dbl_subt[A]:=result+256;carry:=1 END    ELSE BEGIN dbl_subt[A]:=result;carry:=0 ENDENDEND;FUNCTION Makedbl(val:INTEGER):dbl_word;{Build double word from integer}BEGINmakedbl[1]:=val MOD 256;makedbl[2]:=val DIV 256;makedbl[3]:=0;makedbl[4]:=0;END;PROCEDURE Notlistening;BEGINWRITELN('Stn',client_stn,'Not Listening')END;PROCEDURE Txerr(msg:$STRING255;no:BYTE);{Transmit error message to current station}VAR result:BYTE;BEGINmainTX.rtncode:=no;mainTX.cmd:=0; {No more work to do for client}APPEND(msg,CHR(cr));PUTSTR(ADDR4(mainTX.data)+1-min_size,msg);TRANSMIT(0,mainRX.reply,client_stn,ADDRINT(mainTX.rtncode)+LENGTH(msg),LENGTH(msg)+2,result);IF result<128 THEN notlisteningEND;PROCEDURE Err_message(errno:BYTE);VARmsg:STRING 30;BEGINCASE errno OF  198:msg:='Disc Full';  204:msg:='Bad file name';  214:msg:='File not found';  179:msg:='Directory full';  ELSE:BEGIN msg:='FS unusual error ';APPEND(msg,Hex2$(errno)) END;END {Case};WRITELN(msg);Txerr(msg,errno)END;  PROCEDURE ReplyOK;VAR result:BYTE;BEGINmainTX.rtncode:=0;mainTX.cmd:=0; {No more work to do for client}TRANSMIT(0,mainRX.reply,client_stn,ADDRINT(mainTX.rtncode),2,result);IF result<128 THEN notlisteningEND;.