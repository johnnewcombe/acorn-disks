.co > SpoolDoc.cePRINTER SPOOLER.ceD.R.McAuley.ne60.0 Introduction The program for the Spooler is provided in some machine readable form (a ROM filing system ROM or on disc probably). The spooler runs on an BBC B microcomputer with econet. If a second processor is present it should be switched off, and the program run in the BBC by itself. This is because the program does it's own printer buffering and interupt handling, the code for which the Operating System needs on the BBC side. From the users point of view the spooler is identical to the ACORN printer server. So to use the spooler, exactly the same procedure is followed:The network printer is selected     - *FX 5,4The printer ignore character is set - *FX 6,?The print is started                - ctrl+BText is sent to the printer           <TEXT>The print is ended                  - ctrl+C The printer server takes the text sent over the network and immediatly prints it, however the printer spooler creates a file on the file server (or local filing system) and sends the text there. Then, when the print is finished, this print job is placed in a queue and waits for the printer. This allows more than one person to use the network printer at the same time (in fact, up to four may print at once). The text file so formed is then printed out when it reaches the front of the queue, i.e. when all previous jobs have been printed. This may result in a delay between sending the print over the network and it actually being printed out (especially if a slow printer is in use, or many people are using the printer at once)..ne61.0 Setting Up First decide which filing system you are going to run the printer spooler on. You may run under either the Network filing system, or Advanced DFS..ne61.1 Running under NFS Firstly a user id must be provided for the spooler, the spooler needs to know what this id is so that it can automatically log on to the file server. For this user, the BOOT option must be UNSET, or dire consequences will result when the spooler trys to log on. A directory must also be created into which the spooled files will be placed, along with a header file and footer file. Naturally this directory and these files must be available to the above use (i.e. must be readable). The spooler has built in defaults for these, they are:*I AM SPOOLER      - For the user id (no password set)PRINT              - The directory for spooling (in the users root directory)HEADER             - For the header file (in the users root directory)FOOTER             - For the footer file (in the users root directory) These defaults may be changed on starting up the spooler (see section 3.0)..ne61.2 Running under ADFS Setting up is the same as for the NFS except that no user id is required..ne62.0 The Format of the Print When the file containing the print text is at the head of the queue, it will start to print. Firstly there is a line of text containing the time/date etc, of the form:Date 01/04/1984       Time 11:59:45      Station 006      Time spooled 11:58:32 This is followed by a print out of the header file (see 2.1), and then the actual print sent to the spooler by the user. When this finishes a message of the form:Ended at : Date 01/04/1984  Time 12:04:01is printed, followed by the footer file (see 2.1)..ne62.1 The Header and Footer files These files allow the spooler to always print a piece of text, and send control codes to the printer at the start and end of every print. The header file may contain a large banner to be output at the top of each print, e.g.         A         CCCCC     OOOOOO    RRRRRR    N    N        A A       C     C   O      O   R     R   NN   N       A   A      C         O      O   R     R   N N  N      AAAAAAA     C         O      O   RRRRRR    N  N N     A       A    C     C   O      O   R    R    N   NN    A         A    CCCCC     OOOOOO    R     R   N    N       The last character in the header file could be a formfeed (ASCII char 12) so that the users text always starts at the top of a page. A use of the footer file is to ensure the printer is always left in some default state. For example: a dot matrix printer is being used which has a fast line printing mode and a slow letter quality mode. If the user wishes to use the slow, letter quality mode they would send the appropriate control codes, and at the end of the print a sequence of control codes in the footer file would reset the printer to the faster mode. .ne63.0 Command mode On start up, and after a fatal error the printer spooler issues the prompt,Command : There are 9 commands available:STARTFSIDDIRHEADERFOOTERCOPIESSIZENAME Enter the command and hit RETURN, the program will then prompt for further input (i.e. user id, directory or filename) if appropriate.* commands can also be issued while in command mode.For example :*fx 5 2  to set the printer type attached to the spooler..ne63.1 START When all options have been set to the required states START will start the printer spooler. The spooler will issue the message 'Ready :' after its initialisation.  .ne63.2 FS (Default NET) The FS command is used to select the filing system to use, and returns the promt,Filing system to use (ADFS/NET) :type <ADFS|NET> to select the filing system you wish to use..ne63.3 ID (Default SPOOLER) If the Network filing system is being used, the spooler needs to know it's userid for automatic logon. In response to the prompt,User id for spooler :type  <userid> [<password>].ne63.4 DIR (Default <users root|$>.PRINT) This selects the directory into which the spooling files will be placed. In the NFS this is defined from the user's root directory, in the ADFS from the root.  Any files in this directory will be printed, so on start up any files present will be printed and deleted. If the files where print jobs this is okay, however if a file was, say, a machine code program the effect on the printer would be unpredictable..ne63.5 HEADER (Default <users root|$>.HEADER)    FOOTER (Default <users root|$>.FOOTER)     These commands allow redefinition of the files to be used as the header and footer files, the purpose of which is explained in (2.1)..ne63.6 COPIES (Default 1) A utility called COPIES is provided which will allow multiple copies of a document to be printed from a single copy sent to the spooler. This command allows the Network Manager to set the maximum number of copies to print for one document. Up to 8 copies may be selected..ne63.7 SIZE (Default &FFFFFFFF) The Network Manager can set the maximum size of document to be printed by the spooler with this command. Large unprinted jobs then sit in the spooled directory until the spooler is restarted with a maximum size greater than their size.e.g.To set the maximum size to 64Ktype SIZE[RETURN]     10000[RETURN]The size must be entered in hexadecimal..ne63.8 NAME (Default SPOOL) This gives the printer a name to respond to e.g. In response to the promptPrinter name : type MATRIX[RETURN] this then sets the name of the spooler, so that the spooler will reply to POLLPS if supplied with any of 'PRINT','SPOOL' or 'MATRIX'. (See POLLPS for further info).ne64.0 The Screen Display While running the spooler displays it's state on the screen. Under the name 'Printer Spooler' appear the stations from which the spooler is recieving input (between zero and four stations). Below this appears the state of the printer, either Printer Idleif (amazingly) the printer is idle, or if the printer is active a display of the form,Date 01/04/1984       Time 14:18:34Station  006  Time spooled 14:18:22which is the information concerning the currently printing job..ne64.1 The function keys If the printer is idle, pressing 'f0' (function key 0) will cause the printer to do a formfeed. If the printer is busy, pressing 'f1' will prompt withA to abort print and delete this fileC to continue printing this fileR to restart printing this file Hit A/C/R : Hit the one of the keys A/C/R depending on your choice, e.g. 'A' would be chosen if the file contains an illegal sequence of printer control codes, which has placed the printer in an unsuitable state. 'C' would be chosen if the print was halfway through and the paper ran out. 'R' would be chosen if say the printer jammed and ate half the print, and it was desired to restart the print from scratch. Key 'f2' is used to take the spooler off line "gently". If the spooler is inactive on pressing 'f2' it will enter command mode immediatly, however if it is busy it will display the message Stopping Spooler When the current spooling and printing is finished, it will enter command mode (note that during this time new print requests will be recieve 'No Reply').  While the 'Stopping Spooler' message is displayed pressing 'f2' again will contermand the previous 'f2', and the spooler will revert to normal..ne65.0 POLLPS interface The POLLPS interface is a method of finding the state of printer servers/spoolers attached to your Econet. An 8 byte packet is sent to the printer on port &9F, consisting of,          6 byte string          1 byte reason code          1 byte argument Currently there are 6 valid reason codes. The descriptions below show how the printer spooler responds to these various reason codes. The printer replies to the sender on port &9E..ne65.1 Reason code 1  - Poll printer. The printer will reply if the 6 character string sent is one that it recognises. All printers respond to PRINT, spoolers also respond to SPOOL, and bothh servers and spoolers can respond to a string entered on start up. The printer responds with 3 bytes0  Status           0 free, 1 busy, 2 jammed  1  Station number   Only if status is busy      2  Unused If all channels on the printer spooler are being used the status will be busy, and the station number will be zero. This is differentiate between spoolers and servers..ne65.2 Reason code 2  - Poll and connect. Never implemented, in printer spooler will be treated as code 1 - Poll printer..ne65.3 Reason code 3  - Poll despooling job. If a job is being despooled then a text string is returned to the caller ( <128 bytes in length) terminated by a byte containing &FF. If no job is despooling 3 zero bytes are returned. .ne65.4 Reason code 4  - Poll spooling jobs. The argument stipulates which entry in the list of spooling jobs to return information about. It may take a value between 0 and 3 inclusive. Similarly to Code 3 a text string or 3 zero bytes are returned..ne65.5 Reason code 5  - Poll all jobs. Again the argument byte stipulates the number of the job in the complete queue to return information about, and the returned info is as for Codes 3 and 4. This call will return information on all spooling, despooling and passive jobs (i.e. awaiting printing)..ne65.6 Reason code 6  - Printer name The name allocated to the printer on start up (on the spooler this defaults to SPOOL) is returned in 6 bytes padded with zeros. There are two utilities provided which use this interface. The normal POLLPS which works with both servers and spoolers, and the utility SPOOLQ which works only with spoolers..ne66.0 The Delete File interface It happens quite often that a job in the printer queue is no longer wanted to be printed, so an interface exists to remove jobs from the queue. The spooler recognises print jobs by the time they were spooled, so to stipulate the job to delete it is this time that is sent to the spooler. To ensure that prints are only deleted by the person who sent them, the printer spooler will only delete files when the request comes from the same station as the print job did. A user wishing to delete a print job must send an 8 character string of the form, 12:34:56 on port &9D. The spooler will reply with 3 bytes; if the delete was sucessful the 3 bytes will be &FF, if unsucessful (no such file, wrong station) the 3 bytes will be zero..ne67.0 The Utilities The utilities SPOOLQ, COPIES and KILLPRINT all use the cureently selected printer server..ne67.1 POLLPS [<6 character string|station number>]e.g. *POLLPS     ( no argument)results in responses from all printers on the EconetPS= 235    235 is jammed    234 is free    008 is busy with 225016.227 is free e.g. *POLLPS SPOOLresults in responses from spoolersPS= 235    234 is freee.g. *POLLPS 8results in response only from station 8PS= 235    008 is busy with 225.ne67.2 SPOOLQ [<S|D>] First three examples,e.g. *SPOOLQreturns the state of the complete spooler queueSpooled 1 copy(s), of  &00019FF3 bytesStation     212 time 15:17:57  '       'Printed 0 copy(s), and &00010C00 bytesSpooled 3 copy(s), of  &0000154F bytes  Station     027 time 15:18:21  'Secret 'Spooled 1 copy(s), of  &0000F601 bytes  Station   3.018 time 15:18:25  '       'Spooled 2 copy(s), of  &00010000 bytes  Station     006 time 15:18:37  'Mac's  'Spooled 1 copy(s), of  &00030000 bytes  Station     174 time 15:18:45  'Thack  'e.g. *SPOOLQ Dreturns the state of the currently printing jobSpooled 1 copy(s), of  &00019FF3 bytes  Station     212 time 15:17:57  '       'Printed 0 copy(s), and &00011A00 bytese.g. *SPOOLQ Sreturns the state of the currently spooling jobsSpooled 2 copy(s), of  &00010000 bytes  Station     006 time 15:18:37  'Mac's  'Spooled 1 copy(s), of  &00030000 bytes  Station     174 time 15:18:45  'Thack  ' In the complete spoolq the despooling job is easily seen as it has the the amount printed given also. The multiple copies facility, and the text string in single quotes are explained below in the COPIES utility..ne67.3 COPIES <1..8> [<6 character string>] This utility allows multiple copies (if enabled by the Network manager on start up). Up th eight copies may be printed from one spooled document. The optional character string is simply a remark which can help in identifying prints in the spoolers queue.e.g. To use COPIES you simply type *COPIES 2 Mac's A print started to the spooler within about 30 seconds by the usual ctrl+B will have associated with it the text string "Mac's", and will be printed twice..ne67.4 KILLPRINT <hh:mm:ss> This sends the time string given to it to the spooler, and if the spooler has a print job in the queue from the relevant station it will be deleted. This may not be done if the station is currently printing to the spooler. 