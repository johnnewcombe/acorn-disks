.coUser Guide to the Spooler > SpoolUser.lv5.cePRINTER SPOOLER.ceUSER GUIDE.cePRELIMINARY 1st September 1984.lv3.ceD.R.McAuley..lv3.ne60.0 Introduction    ------------ From the users point of view the spooler is identical to the ACORN printer server. So to use the spooler, exactly the same procedure is followed:.ne7The network printer is selected     - *FX 5,4The printer ignore character is set - *FX 6,?The print is started                - ctrl+BText is sent to the printer           <TEXT>The print is ended                  - ctrl+C The printer server takes the text sent over the network and immediatly prints it, however the printer spooler creates a file and sends the text there. Then, when the print is finished, the print job is placed in a queue and waits for the printer. This allows more than one person to use the network printer at the same time (in fact, up to four may print at once). The text file so formed is then printed out when it reaches the front of the queue, i.e. when all previous jobs have been printed. This may result in a delay between sending the print over the network and it actually being printed out (especially if a slow printer is in use, or many people are using the printer at once). One of the facilites of the printer spooler is that the Network Manager may set a maximum size of print allowable. If a larger print is sent to the spooler, it will mark the print as 'Too big' and the network manager is required to restart it..ne62.0 The Format of the Print    ----------------------- When the file containing the print text is at the head of the queue, it will start to print. Firstly there is a line of text containing the time/date etc, of the form:Date 01/04/1984    Time 11:59:45    Station 006   Time spooled 11:58:32 This is followed by a print out of the header file (see 2.1), and then the actual print sent to the spooler by the user. When this finishes a message of the form:Ended at : Date 01/04/1984  Time 12:04:01is printed, followed by the footer file (see 2.1)..ne62.1 Header and Footer files    ----------------------- The purpose of these files is to allow a banner to be printed at the start and end of every print. The user has no control over them as they are set up by the Network manager..ne63.0 Utilities    --------- Certain utilities should be provided in the Library on the fileserver, if they are not then contact the Network manager. These utilities may also be copied to local filing systems (floppies or winchester), and used if DFS or ADFS is the currently selected filing system..ne63.1 POLLPS (<text|station number>)    ------------------------------ With no argument this utilility returns the station numbers and state of all printer servers/spoolers attached to the Network.e.g..in4Typing*POLLPS[RETURN]will result in output of the form,PS= 235                   ; This is the currently selected printer    234 is busy with 006  ; The printer server at 234 is in use003.200 is free           ; This printer spooler/server is free    008 is busy           ; A spooler at 8 is in use    235 is jammed         ; The physical printer at 235 is broken.in0The printer spooler will return busy only if there are four people currently printing to it. If a text argument is given to POLLPS then this is broadcast to all printers, however only those who recognise it will respond. For example all printer spoolers respond to SPOOL. If a numeric argument is given only that particular station number will be polled..ne63.2 PRINTERS    -------- Returns the station number and 'name' of printers (only spoolers will respond until implemented on the PRINTER SERVER). This name can then be used to poll that particular printer by use of POLLPS..ne9 Note that the following five utilities ( COPIES, SPOOLQ, RESUME, SUSPEND, KIKLPRINT ) comunicate only to the currently selected printer server..in03.3 COPIES (<1..8>) (<text>) (HOLD)    ------------------------------- Will print up to 8 copies of a job and associate a six char text string with that job. The job must then be started as normal with the ctrl-B within 30 secs (approx.). The keyword 'HOLD' causes the print to be placed in a suspended state (see 'Suspend', 'Resume'). Note that the Network manager may limit the number of copies printed in this way to any number between 1 and 8..ne5e.g. To use COPIES you simply type .in4*COPIES 2 Mac's[RETURN] Then a print started to the spooler within about 30 seconds by the usual ctrl+B will have associated with it the text string "Mac's", and will be printed twice..in0.ne63.4 SPOOLQ (<d|s>) This allows the current state of the spooler to be interogated..ne6Typing *SPOOLQ  with  No parameter returns the total queue.         with  S as parameter returns the spooling jobs only.         with  D as parameter returns the despooling job only.                         .ne7e.g.in4Typing*SPOOLQ[RETURN]will result in a spooler queue of the form,.ne3.in8Spooled   8 copy(s) of  &00010422 bytesStation     006 time 17:34:40  '      'Printing copy 2 : &00001B00 bytes.ne2Spooled   1 copy(s) of  &0000F1AD bytes Station 003.019 time 17:35:17  '      '.ne2Spooled   1 copy(s) of  &000000F5 bytes Station     225 time 18:25:18  '      '.ne2Spooling  3 copy(s) of  &000011B3 bytes Station     006 time 18:25:30  'Mac   '.ne2Too big   1 copy(s) of  &0009A1EA bytes Station     190 time 16:25:52  'Hugo's'.ne2Suspended 1 copy(s) of  &000002D8 bytes Station     174 time 17:35:45  '      '.in0If the network manager has placed a limit on the size of print jobs, you may find your job marked 'Too big'. If this print was a mistake you may delete it youself (see KILLPRINT), however if you want it printed out you must contact the network manager who will place it in the queue, ready for printing.Further examples with arguments :.in0e.g. *SPOOLQ D(espool).in4returns the state of the currently printing job.in8Spooled 1 copy(s), of  &00019FF3 bytes  Station     212 time 15:17:57  '       'Printing copy 1 : &00011A00 bytes.in0e.g. *SPOOLQ S(pool).in4returns the state of the currently spooling jobs.in8Spooled 2 copy(s), of  &00010000 bytes  Station     006 time 15:18:37  'Mac's  'Spooled 1 copy(s), of  &00030000 bytes  Station     174 time 15:18:45  'Thack  '.in0 In the complete spoolq the despooling job is easily seen as it has the the amount printed given also. The multiple copies facility, and the text string in single quotes are explained below in the COPIES utility..ne9 Note the following three utilites will only affect jobs from the same station that the print originated from.3.5 RESUME <hh:mm:ss>    ----------------- Will place a suspended job back in the spool queue.(See suspend)..ne63.6 SUSPEND <hh:mm:ss>    ------------------ Any of your prints may be placed in a 'suspended state'. This can be done either by using *COPIES HOLD before printing, or *SUSPEND when finished. This 'suspended state' means that the job will not be printed out until replaced in the queue with the RESUME utility. .ne63.7 KILLPRINT (<hh:mm:ss>)    ---------------------- When printing to the spooler no arguments need be supplied and this will terminate and delete the current print. If the print job is in the queue it is identified by the time it was spooled. If this time is given to KILLPRINT it will remove the print job from the queue. This works for a job in any state (i.e 'Suspended', 'Too big', 'Printing' or simply 'Spooled'). 