.co > BBC-ANFS-2.os opt1,0.igRegister 2 is the section count register.Register 3 is the sub-section count register.Register 4 is the sub-sub-section count register.The following sequences are for the C.ITOH printer..on27.on63.on35.on32    Set draft mode..on27.on63.on35.on34    Set "LQ" mode..on27.on51.on34         Start italic..on27.on51.on32         End italic..on27.on51.on33         Start bold..on27.on51.on32         End bold.Note that italic ends bold and vice versa..en.co The start bold macro.dm sb.on27.on51.on33.os bfont.en.co The finish bold macro.dm fb.on27.on51.on32.os thin.en.co The start italic macro.dm si.on27.on51.on34.os italic.en.co The finish italic macro.dm fi.on27.on51.on32.os thin.en.he.nn.os ACORN.nnAcorn Computers                                                                            .nn.ceAdvanced NFS ROM (BBC).rfOffice Systems.en.an2+1.an3,0.an4,0.in0.bp.sb.r2 Technical details of the new features..fb.ix!in0!nn!rf.r0Section .r2	Technical details of the new features.en.in5.an3+1.ne10.si.r2..r3 OSWORD A=&E, Read the time..fi.ix.in0!in8!nn!rf.r0.r2..r3	OSWORD A=&E, Read the time.in5.en.ti+3X and Y point to a control block the first byte of which is the reason code.  If the reason code is four then the time and date are placed in the control block in the following format;.in+6XY + 0 => Year since 1900, in BCDXY + 1 => Month, in BCDXY + 2 => Day of the month, in BCDXY + 3 => Day of the week, always zeroXY + 4 => Hours, in BCDXY + 5 => Minutes, in BCDXY + 6 => Seconds, in BCD.in-6.in5.an3+1.ne10.si.r2..r3 Changes to OSWORD A=&10..fi.ix.in0!in8!nn!rf.r0.r2..r3	Changes to OSWORD A=&10.in5.en.ti+3Transmit has been changed slightly to permit the transmission of no data, ie. a transmission of zero length.  This is inter-operable with previous versions of the NFS.  Due to restrictions of the Tube zero length transmissions are only available from the I/O processor, since the source of zero length transmissions is unimportant this is not a major problem.  If a zero length transmission is attempted from the Tube side then a 64K transmit will occur.  This is the same as previous versions of the NFS..in5.an3+1.ne10.si.r2..r3 Changes to OSWORD A=&13..fi.ix.in0!in8!nn!rf.r0.r2..r3	Changes to OSWORD A=&13.in5.en.ti+3There is now a defined "fault" return where for some reason the OSWORD has failed, this is indicated by the reason code being returned as zero.  Calls with reason codes 0,1,6, and 7 can fail if the ANFS is not the current filing system.  Call 17 can fail if contact with a bridge fails whilst trying to determine the local network number.  Call 7 could fail if any one of the three handles were not for open directories on the current file server..ti+3The new calls are as follows, 11 is "Read error channel number" returns the channel of the last error in byte 1 of the OSWORD block.  Note byte 0 is the reason code.  An error channel of 0 means no channel was associated with the last error..ti+3.ne6Call 12 and 13 read and set the printer server type text referred to in in section 1..r5..r6.  The printer server type is read from or set to the bytes 1 to 6 of the OSWORD block.  The printer server type is always stored as upper case text so reading and setting will not always return the same information..ti+3.ne15Call 14 returns the number of characters in the local printer buffer in byte 1 of the OSWORD block.  Call 15 and 16 read and set the delay and retry count values.  The normal transmit retry count is in byte 1, the receive poll count is in byte 2, and the machine peek retry count is in byte 3.  The last new call is 17, it returns the local network number in byte 1, byte 2 is not touched, and byte 3 is translated as follows;.ti+6DEF FNtranslate(number).ti+6IF number = 0 THEN = file_server's_network_number.ti+6IF number = local_network_number THEN = 0.ti+6= number.in5.an3+1.ne10.si.r2..r3 Changes to OSFILE..fi.ix.in0!in8!nn!rf.r0.r2..r3	Changes to OSFILE.in5.en.ti+3The call with A=7 now does the operation "Create", which is the same as "Save" but no data is transferred.  Entry and exit conditions are the same as "Save".  Note that this function requires file servers of the following version or above;.ti+6"Level
2
Version
1.02" or "Version
IV.03"..in5.an3+1.ne10.si.r2..r3 Changes to OSARGS..fi.ix.in0!in8!nn!rf.r0.r2..r3	Changes to OSARGS.in5.en.ti+3If A=3 then the function expressed in BASIC as "EXT#channel=value" is performed.  The handle is in Y and the value is in a four byte block of memory pointed to by the X register.  Note that this function requires file servers of the following version or above;.ti+6"Level
2
Version
1.02" or "Version
IV.03"..ti+3If A=4 then the amount of space currently allocated to the file is returned at X the same as for A=0 or A=2..ti+3If A=&80 then the following information is returned in the four bytes in zero page pointed to by X.  The first byte has the external or file server handle for the object whose user handle is given in Y, the file server number is given in the second and third bytes and an ANFS internal status byte is returned in the forth byte.  The format for this status byte is as follows;.ti+6Bit 0 is the sequence number.ti+6Bit 1 is the "known to be a dir" flag bit.ti+6Bit 2 is the "thought to be URD" bit.ti+6Bit 3 is the "thought to be CSD" bit.ti+6Bit 4 is the "thought to be CSL" bit.ti+6Bit 5 is the "current context" bit if the object is a directory.ti+6Bit 5 is the "write only" bit if the object is a file.ti+6Bit 6 is the EOF error bit, set if next BGET will fail.ti+6Bit 7 is the write flag, 1 means writable to.ti+3.ne8The call with A=&FF will ensure the file whose handle is in Y to the file server, note that this does not close the file but mearly ensures that the data associated with the file is up to date in the file server.  If Y=0 then all files will be ensured.  This is the same as DFS and ADFS..in5.an3+1.ne20.si.r2..r3 Errors..fi.ix.in0!in8!nn!rf.r0.r2..r3	Errors.in5.en.ti+3There are several new errors, they are listed below in numerical order together with their descriptions..in10.an4,1.ne12.r2..r3..r4.sb0, "Remoted"..fb.ti+3This error, which should be regarded as "fatal" is usually a result of another station running the REMOTE utility.  It can also be caused by using an OSWORD call on another station..in10.an4+1.ne12.r2..r3..r4.sb&93, 147, "No!"..fb.ti+3The "No!" error is issued in response to an attempt to *RUN, */, or * a file with a load address of &FFFFFFxx and an execute address which is not &FFFFFFFF (see section 1..r7).  This feature is mainly to permit the filing system to distinguish data files from code or control files.  It is also of interest that the five bytes of the exec and load address that are "don't care" could be used to store other information, eg. the time, or the file type..in10.an4+1.ne12.r2..r3..r4.sb&94, 148, "Bad parameter"..fb.ti+3This error means that the number supplied to *CDIR was not between one and 255..in10.an4+1.ne22.r2..r3..r4.sb&A4, 164, "Station <stn. id.> not present"..fb.ti+3Two operations, *I
AM and control B, now precede there normal actions by a machine peek immediate operation.  This machine peek is not protectable against, it is normally used to verify the existence of the station you are attempting to contact.  The retry count on this transmission is low so that failure is almost immediate, this is to prevent long delays after mistyping.  If a "Not
listening" or "Net
error" causes the transmission to fail then this "Station
nnn
not
present" error will be reported, if a "No
clock" or "Line
jammed" causes the error then it will be reported as such.  Note that this can fail if the station in question is using its' floppy discs at the time..in10.an4+1.ne12.r2..r3..r4.sb&A6, 166, "Printer busy" and &A7, 167, "Printer jammed"..fb.ti+3After a control B the printer server is asked what its' current state is.  It can return one of three states, Ready, Busy, or Jammed.  If the the ready status is returned then the print will start in the normal way.  However if busy or jammed is returned then this is reported and the control B is cancelled..in10.an4+1.ne12.r2..r3..r4.sb&AA, 170, "Bad net sum"..fb.ti+3The ANFS ROM keeps a checksum on the contents of its' third private page, the page used to contain open file information when it is not the current filing system and other information about the current printer type.  This checksum is verified on most operations and if it is found to be in error then this error will be generated.  The checksum can only be reset by a control <BREAK>..in10.an4+1.ne12.r2..r3..r4.sb&B0, 176, "Bad rename"..fb.ti+3The error "Bad
rename" is caused by attemping to rename using one (but not two) pathnames starting with "&", the URD.  Attempting to use "&" as one or other pathname.  Only supplying one name.  Note that it is legal to use "&" in both pathnames..in10.an4+1.ne12.r2..r3..r4.sb&B7, 183, "Outside file"..fb.ti+3This error occurs if an attempt is made to move the file pointer outside the extent of a file which is only open for input, note that this will also have the channel on the end eg. "Outside
file
on
channel
32".  The *DUMP will also give "Outside
file" if an attempt is made to start the dump past the end of the file, this will not leave the file open..in10.an4+1.ne12.r2..r3..r4.sb&C0, 192, "No more FCBs"..fb.ti+3The filing system has 16 File Control Blocks or FCBs.  One block is used for every open file or directory.  If files are open at more than one file server then it is possible to run out of FCBs with which to open more files, this error will result from attempting to open the 17th object..in10.an4+1.ne12.r2..r3..r4.sb&D0, 208, "Bad station number"..fb.ti+3Station numbers must be in the range 1 to 254 anything else is illegal..in10.an4+1.ne12.r2..r3..r4.sb&D1, 209, "Bad net number"..fb.ti+3Network numbers must be in the range 0 to 254 anything else is illegal..in10.an4+1.ne12.r2..r3..r4.sb&D4, 212, "Write only"..fb.ti+3An attempt was made to read from a write only file.  Either OSBGET or OSGBPB can cause this error..in10.an4+1.ne12.r2..r3..r4.sb&DC, 220, "Syntax"..fb.ti+3The "Syntax" error is issued if a command is issued with incorrect syntax this is usually because the command requires some sort of argument and one has not been supplied eg. *ACCESS or *PASS.  The other case for a "Syntax" error is *REMOVE with two parameters, the reason for this is to prevent remove from being confused with rename..in10.an4+1.ne12.r2..r3..r4.sb&DE, 222, "Net
channel", "on
channel",          and "not
on
this
file
server"..fb.ti+3Simple channel errors occur when a handle which is outside the normal range (&20 to &2F) or is not open is used in a random access operation (OSBGET, OSBPUT, OSARGS, OSGBPB, or OSFIND).  If the handle is valid, ie. belongs to an open object, but that object was opened on another fileserver then the text "not
on
this
file
server" will be appended to the channel message giving one like "Net
channel
32
not
on
this
file
server"..ti+3.ne15If an error of any kind occurs during any random access operation then the channel concerned with the operation will be reported on the end of the error string like this "No
reply
from
station
254
on
channel
32" this channel can be read with OSWORD A=&13.  Note that the channel shown may not be the channel that the operation was attempted on, this could happen if an OSBGET was attempted and to read the required data data associated with another file had to be ensured and the error occured on that operation.  If errors like "No
clock" occur during random access operations then the operation is re-startable, this is useful if a large quantity of network traffic prevents file server access for the duration of a timeout period..in10.an4+1.ne12.r2..r3..r4.sb&F0, 240, "Bad number"..fb.ti+3This means that a character other than "0" - "9", "
", or <CR> was encountered when a number was expected..in10.an4+1.ne12.r2..r3..r4.sb&F1, 241, "Bad hex"..fb.ti+3This means that a character other than "0" - "9", "a" - "z", "A" - "Z", "
" or <CR> was found after the "&" when a number was expected.  This could occur in *I
AM, *PS, *POLLPS, *FS, or *CDIR..in10.an4+1.ne12.r2..r3..r4.sb&FC, 252, "Bad address"..fb.ti+3It means the address given for either of the optional arguments contained a non hexadecimal character or the address was greater than &FFFFFFFF..in10.an4+1.ne12.r2..r3..r4.sb&FD, 253, "Bad string"..fb.ti+3A bad string is one with an odd number of quotes.  Some commands need to process the given arguments and will respond with this error, eg. *LIB
"fred""..an2+1.an3,0.in0.bp.sb.r2 Description of syntax items..fi.ix!in0!nn!rf.r0Section .r2	Description of syntax items.en.in5.an3+1.ne5.r2..r3.sb<address>.fb.ti+3Is a 32 bit address in hexadecimal. If more than eight significant digits are given then the error "Bad
address" &FC will be given.  If a non-hex character is encountered then the "Bad
hex" &F1 error will occur..an3+1.ne5.r2..r3.sb<CR>.fb.ti+3This is used to represent the RETURN key or character &0D, decimal 13. This character is usually called "Carriage
Return"..an3+1.ne5.r2..r3.sb<dir>.fb.ti+3A directory specification which may include a path name, and as in <filename> may be abbreviated..an3+1.ne10.r2..r3.sb<filename>.fb.ti+3A file name. This name may include directory information ie. it may be a path name like "basicprogs.myprog". The file server will also accept abbreviations for filenames and directory names. By abbreviating a name with an "*" the number of keystrokes used is reduced. For example if the above was given as "ba*.m*" then the first file starting with "m" in the first directory starting with "ba" would be used. Note that this use of "*" does not imply multiple files mearly the first to be found..an3+1.ne5.r2..r3.sb<LF>.fb.ti+3This is used to represent the character &0A, decimal 10. This character is usually called "Line
Feed"..an3+1.ne5.r2..r3.sb<number>.fb.ti+3Is a decimal number, this number will be converted to a single byte and therefore should not be greater than 255..an3+1.ne10.r2..r3.sb<offset>.fb.ti+3Is a 32 bit address in hexadecimal. If a non-hex character is given then the error "Bad
hex" &F1 will be given. If the value is greater than the length of the file then the error "Outside
file" &B7 will be caused..an3+1.ne5.r2..r3.sb<password>.fb.ti+3A password for use with the file server, this is a six character string which must start with a non-numeric..an3+1.ne5.r2..r3.sb<prot type>.fb.ti+3A protection type, used to set or clear the protection mask byte. May have one of the following values; "Halt", "Peek", "Poke", "Jsr", "Proc", or "Utils"..an3+1.ne5.r2..r3.sb<ps type>.fb.ti+3Printer server type, may be any string upto  six  characters  in  length,  examples; "BNY", "QUME", "DAISY", "COLOUR", "LINE". Note that if more than six characters are given then only the first six will be used..an3+1.ne5.r2..r3.sb<stn. id.>.fb.ti+3Is a full station number and may include a network number. The network number precedes the station number and is delimited by a ".". If the string ".nnn" is given then the network number will be set to 0 and the station number to nnn. If the string "nnn." is given then the network number will be set to nnn and the station number will be left unchanged. Strings like "nnn.mmm" will set both numbers. The special case "." will zero the net number leaving the station number unchanged..an3+1.ne5.r2..r3.sb<stn number>.fb.ti+3Is the local station number. It must be in the range 1 to 254..ic.cc!!ch anfsindex