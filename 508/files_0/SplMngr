.coUser Guide to the Spooler > SpoolMngr.lv5.cePRINTER SPOOLER DOCUMENTATION.ceMANAGER GUIDE.cePRELIMINARY 1st September 1984.lv3.ceD.R.McAuley..lv3.ne60.0 Introduction    ------------ See USER GUIDE !.ne61.0 Setting Up    ---------- The Printer Spooler is primarily aimed at use on LEVEL 3 WINCHESTER FILE SERVERS. It's use on floppy file server's of any type is not recomended as it will run like a drain. It may also run on a local winchester under ADFS if you're extravagant enough, but a LEVEL 3 file server must be present to provide the time and date. So the first thing to do is to decide which filing system you are going to run the printer spooler on..ne61.1 Running under NFS    ----------------- Firstly a user id must be provided for the spooler, the spooler needs to know what this id is so that it can automatically log on to the file server. For this user, the BOOT option must be UNSET, or dire consequences will result when the spooler trys to log on. A directory must also be created into which the spooled files will be placed, along with a header file and footer file. Naturally this directory and these files must be available to the above use (i.e. must be readable). The spooler has built in defaults for these, they are:*I AM SPOOLER   - For the user id (no password set)PRINT           - The directory for spooling (in the urd)HEADER          - For the header file (in the urd)FOOTER          - For the footer file (in the urd) These defaults may be changed on starting up the spooler (see section 3.0)..ne61.2 Running under ADFS    ------------------ Setting up is the same as for the NFS except that no user id is required..ne62.0 The Header and Footer files    --------------------------- These files allow the spooler to always print a piece of text, and send control codes to the printer at the start and end of every print. The header file may contain a large banner to be output at the top of each print,.ne8e.g.     A         CCCCC     OOOOOO    RRRRRR    N    N        A A       C     C   O      O   R     R   NN   N       A   A      C         O      O   R     R   N N  N      AAAAAAA     C         O      O   RRRRRR    N  N N     A       A    C     C   O      O   R    R    N   NN    A         A    CCCCC     OOOOOO    R     R   N    N       The last character in the header file could be a formfeed (ASCII char 12) so that the users text always starts at the top of a page. A use of the footer file is to ensure the printer is always left in some default state. For example: a dot matrix printer is being used which has a fast line printing mode and a slow letter quality mode. If the user wishes to use the slow, letter quality mode they would send the appropriate control codes, and at the end of the print a sequence of control codes in the footer file would reset the printer to the faster mode.   The maximum size of the footer and header files is about &1000 = 4K bytes..ne63.0 Command mode    ------------ On start up, and after a fatal error the printer spooler issues the prompt,Command :.ne11 There are 9 commands available :.in33STARTFSIDDIRHEADERFOOTERCOPIESSIZENAME.in0 Enter the command and hit RETURN, the program will then prompt for further input (i.e. user id, directory or filename) if appropriate.* commands can also be issued while in command mode.e.g..in4*fx 5 2   - to set the printer type attached to the spooler..in0.ne63.1 START    ----- When all options have been set to the required states START will start the printer spooler. The spooler will issue the message 'Ready :' after its initialisation.  .ne63.2 FS (Default NET)    ---------------- The FS command is used to select the filing system to use, and returns the promt,Filing system to use (ADFS/NET) :type ADFS or NET to select the filing system you wish to use..ne63.3 ID (Default SPOOLER)    -------------------- If the Network filing system is being used, the spooler needs to know it's userid for automatic logon. In response to the prompt,User id for spooler :type  <userid> [<password>].ne63.4 DIR (Default <users root|$>.PRINT)    ---------------------------------- This selects the directory into which the spooling files will be placed. In the NFS this is defined from the user's root directory, in the ADFS from the root.  Any files in this directory will be printed, so on start up any files present will be printed and deleted. If the files where print jobs this is okay, however if a file was, say, a machine code program the effect on the printer would be unpredictable. If the spooler is running under NFS on the file server, other users must not be permitted access to this directory..ne63.5 HEADER (Default <users root|$>.HEADER)    FOOTER (Default <users root|$>.FOOTER)    -------------------------------------- These commands allow redefinition of the files to be used as the header and footer files, the purpose of which is explained in (2.1). .ne63.6 COPIES (Default 1)    ------------------ A utility called COPIES is provided which will allow multiple copies of a document to be printed from a single copy sent to the spooler. This command allows the Network Manager to set the maximum number of copies that the spooler will print for one document. Betweeen 1 and 8 copies may be selected..ne63.7 SIZE (Default &FFFFFFFF)    ------------------------ The Network Manager can set the maximum size of document to be printed by the spooler with this command. Large unprinted jobs then sit in the spooled directory marked 'Too big' until the Network manager (you) restart them using the utility SpoolSyst.e.g..in4To set the maximum size to 64Ktype SIZE[RETURN]     10000[RETURN].in0The size must be entered in hexadecimal..ne63.8 NAME (Default SPOOL)    -------------------- This gives the printer a name to respond to e.g. In response to the prompt.in4Printer name : type MATRIX[RETURN] this then sets the name of the spooler, so that the spooler will reply to POLLPS if supplied with any of 'PRINT','SPOOL' or 'MATRIX'..in0.ne64.0 The Screen Display    ------------------ While running, the spooler displays it's current state on the screen. Under the text 'Printer Spooler Vx.yz' appear the stations from which the spooler is recieving input (between zero and four stations). Below this appears the state of the printer, either Printer Idleif (amazingly) the printer is idle, or if the printer is active a display of the form,.in2Date 01/04/1984       Time 14:18:34Station  006  Time spooled 14:18:22.in0which is the information concerning the currently printing job..ne64.1 The function keys    ----------------- If the printer is idle, pressing 'f0' (function key 0) will cause the printer to do a formfeed (i.e. ASCII char 12) If the printer is busy, pressing 'f1' will prompt with.ne5.in10A to abort print and delete this fileC to continue printing this fileR to restart printing this file Hit A/C/R :.ne8.in0 Hit the one of the keys A/C/R depending on your choice, e.g. 'A' would be chosen if the file contains an illegal sequence of printer     control codes, which has placed the printer in an unsuitable state. 'C' would be chosen if the print was halfway through and the paper ran out. 'R' would be chosen if say the printer jammed and ate half the print,     and it was desired to restart the print from scratch. Key 'f2' is used to take the spooler off line "gently". If the spooler is inactive on pressing 'f2' it will enter command mode immediatly, however if it is busy it will display the message .in10Stopping Spooler.in0 When the current spooling and printing is finished, it will enter command mode (note that during this time new print requests will be recieve 'No Reply').  While the 'Stopping Spooler' message is displayed pressing 'f2' again will contermand the previous 'f2', and the spooler will revert to normal..ne64.2 The spool queue    --------------- An entry in the spool queue is simply a file in the directory chosen by the DIR command. However, files do not become eligible to be printed until spooling into them has been finished. The position of a particular (finished) print in the queue is then determined by two things..ne6(i)  Most importantly the initial letter of the filename..in5This can be one of { A L Y Z }.A - Maximum priority. This only happens if SPOOLSYST is used.L - Normal jobs.Y - These jobs are 'Too big'.Z - Suspended jobs..in0.ne4(ii) Secondly the time at which the spool was started..in5After the first letter are 6 numerals giving the time the job started spooling. Normal jobs will then print out in the order that they started spooling..in0 The last three characters of the filename are the station number from which the print originated. Further information concerning each print job is help as the load and exec addresses of the file. If the catalogue informtion concering a particular file is read into a control block it will consist of the following :.ne26.in8Catalogue information        Spooler informationAddress of filename LSB  00  LSB Address of filename                    MSB  01  MSBLoad address        LSB  02  Network number (See Econet Bridge!)of file                  03  Number of copies to print - 1                         04  ---                           MSB  05   |                              |  Six character stringExecute address     LSB  06   |  as supplied by *COPIESof file                  07   |  or all &FF if none                         08   |                    MSB  09  ---                         Length              LSB  0A  LSB  Lengthof file                  0B       of file                         0C                    MSB  0D  MSBAttributes               0E  AttributesDisc address        LSB  0F  LSB Disc address                         10                    MSB  11  MSB.in0 It is a string containing this information that is returned by the SPOOLQ utility. Simply by changing the first character of each file name we can restart 'Suspended' or 'Too big' jobs, and suspend 'Spooled jobs'..ne65.0 POLLPS interface    ---------------- The POLLPS interface is a method of finding the state of printer servers/spoolers attached to your Econet..ne6 An 8 byte packet is sent to the printer on port &9F, consisting of,.in106 byte string1 byte reason code1 byte argument.in0 Currently there are 6 valid reason codes. The descriptions below show how the printer spooler responds to these various reason codes. The printer replies to the sender on port &9E. There are two utilities provided which use this interface. The normal POLLPS which works with both servers and spoolers, and the utility SPOOLQ which works only with spoolers..ne65.1 Reason code 1  - Poll printer.    ------------------------------ The printer will reply if the 6 character string sent is one that it recognises. All printers respond to PRINT, spoolers also respond to SPOOL, and both servers and spoolers can respond to a string entered on start up. The printer responds with 3 bytesbyte 0  Status           0 free, 1 busy,                         2 jammed completly, 3 jammed printer     1  Station number   Only if status is busy     2  UnusedNotes:.in2(i)   Printer servers respond with the station number they are busy with, however as a printer spooler is only busy if all four channels on the it are being used at once, the station number will be zero. This is differentiate between spoolers and servers.(ii)  The status code 2 is returned by a printer server or spooler. This indicates that no print jobs will be acceptd. In the case of the spooler it means that the network manager is taking the spooler 'off line'.(iii) Status code 3 is only returned by spoolers. This indicates that the physical printer is jammed, but print jobs will still be accepted and spooled..in0.ne65.2 Reason code 2  - Poll and connect.    ---------------------------------- Never implemented; in printer spooler will be treated as code 1 - Poll printer..ne65.3 Reason code 3  - Poll despooling job.    ------------------------------------- If a job is being despooled then a text string is returned to the caller ( <128 bytes in length) terminated by a byte containing &FF. If no job is despooling 3 zero bytes are returned. .ne65.4 Reason code 4  - Poll spooling jobs.    ------------------------------------ The argument stipulates which entry in the list of spooling jobs to return information about. It may take a value between 0 and 3 inclusive. Similarly to Code 3 a text string or 3 zero bytes are returned..ne65.5 Reason code 5  - Poll all jobs.   -------------------------------- Again the argument byte stipulates the number of the job in the complete queue to return information about, and the returned info is as for Codes 3 and 4. This call will return information on all spooling, despooling and passive jobs (i.e. awaiting printing)..ne65.6 Reason code 6  - Printer name    ----------------------------- The name allocated to the printer on start up (on the spooler this defaults to SPOOL) is returned in 6 bytes padded to the right with zeros..ne66.0 The change queue interface    -------------------------- It happens quite often that a job in the printer queue is no longer wanted or it is desired to suspend a job. This interface exists to do exactly that. It allows normal users to remove, suspend or resume their jobs in the queue. An extension allows the network manager the above type of access to any files, allows him to give a job maximum priority, and restart prints which are 'Too big'. Users are provided with the utilities KILLPRINT, RESUME and SUSPEND which use this interface, the network manager has the utility SPOOLSYST which performs all these functions and more. To use this interface a packet is sent to the spooler on port &9D consisting of 8 bytes :.in101 byte reason code6 byte time identification (if relevant)1 byte - zero (0).in0 The spooler will reply with 3 bytes on port &9D; if the transaction was sucessful the 3 bytes will be &FF, if unsucessful (no such file, wrong station) the 3 bytes will be zero. The reason code takes the values 0 to 2 inclusive and &80 to &83 inclusive. Reason codes 0 to 2 are available to the user in the utilities KILLPRINT, RESUME, SUSPEND, and can only effect prints from the same station. Reason codes &80 to &83 are available to the network manager by SPOOLSYST. This utility should be kept well away from normal users as it can effect print jobs from any station. The time identification consists of a 6 character string of the time (2 bytes hours, 2 bytes minutes, 2 bytes seconds), which corresponds to the time of the print to be affected. All the following reason codes will result in a failed transaction if the file to be effected is being spooled into at the time (You cannot rename an OPEN file) with the exception of code 0 from the same station as the print - see 6.1 below..ne66.1 Reason code 0 - Delete a file    ----------------------------- If the user is currently sending information to the spooler the time string is insignificant, and the currently spooling job is marked for deletion when it finishes. Spooling may continue, but when ctrl+c is typed the whole print will be killed. (Note that the supplied utility KILLPRINT stops the network ROM printing by doing a ctrl+c). If the print has finished and is anywhere in the queue ( 'Suspended', 'Too big', 'Printing' or simply 'Spooled' ) sending the relevant time will cause it to be deleted, even if currently being printed..ne66.2 Reason code 1 - Resume a file    ----------------------------- By the supplying the relevant time a 'Suspended' job will be placed back in the normal queue - this has no effect on 'Too big' jobs. This works by renaming the file to have a first character of 'L' instead of 'Z'..ne66.3 Reason code 2 - Suspend a file    ------------------------------ This has the opposite effect to code 1. A normal job, if not already printing, will be suspended by renaming a file starting with 'L' to start with 'Z'.Note that codes 0 to 2 will also effect jobs from the same station even if given maximum priority by the network manager..ne66.4 Reason code &80 - System delete a file    -------------------------------------- By supplying the relevant time any file from any station can be deleted, as long as it is not being spooled into..ne66.5 Reason code &81 - System resume    ------------------------------- As code 1, but this also effects 'Too big' files, and of course files from any station..ne66.6 Reason code &82 - System suspend    -------------------------------- As code 2, and also effecting 'Too big' files and files from any station..ne66.7 Reason code &83 - System priority    --------------------------------- This causes the relevant job to be placed at the front of the queue by renaming the file to start with an 'A'. This also effects any file from any station..ne67.0 Extended print interface    ------------------------ Before printing starts the person wishing to print may send a packet to the spooler on port &9E consisting of 8 bytes,.in101 byte - zero1 byte - (number of copies - 1)6 byte - text string.in0 If a print started with the normal ctrl+b within the normal time out period (approx 256 seconds) this will cause the specified number of copies to be printed, and the given text string to be associated with the print - see 4.2..ne68.0 The Utilities    ------------- The utilities supplied for use by the user are detailed in the USER GUIDE. The only utility for use exclusively by the network manager ( and it would be best kept that way ) is SPOOLSYST..ne68.1 SPOOLSYST    --------- This combines the utilities KILLPRINT, RESUME, SUSPEND and gives them privelege over all stations ( change queue interface reason codes &80 to &82) and adds the ability to give a job high priority ( code &83). The syntax for SPOOLSYST is :.in4*SPOOLSYST <hh:mm:ss> <K|P|R|S>.in0Where the letters stand for :.in10K - Delete the print (KILLPRINT)P - Give file maximum priorityR - Replace file in queue (RESUME)S - Place file in suspended state (SUSPEND).in0