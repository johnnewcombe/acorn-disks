|\ Lock1|uInterlock MechanismsThe fileserver design requires two completely different forms of interlock : a high level interlock on files which is visible to users, and a low level interlock on directory entries to enable us to perform atomic updates to several data structures in parallel.  This latter interlocking is invisible to users; they expect such operations to be performed in sequence, but we wish to overlap the disc transfers for one operation with the procesing of another if there is no conflict.The high level interlocks are achieved by holding a file control block for each open file in the memory of the file server.  This holds the disc address of the directory entry describing the file and the access requested (read, read/write or extend).  Any attempt to delete or open a file causes a search of all active file control blocks for references to that file; prohibited operations (such as deleting an open file) are reported to the user.Each client's current directory, user root directory (or 'home' directory) and library are also allocated file control blocks; this prevents these directories from being deleted and so allows disc addresses to be used rather than looking up the whole path name for each access.  Clients can also open other directories and use them to specify different 'current' directories.The Econet protocols enforce a maximum of 8 file control blocks per user, and in this file server each client has the full allocation available.  This means that each client requires about 140 bytes of memory.|glock2