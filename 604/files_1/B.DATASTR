|\ datastruc|u3 Data structuresThere are two data structures which are global to the whole fileserver : the directory structure on the disc, and the user table in main memory.  There is a need to interlock updates to these???????|uInterlock MechanismsThe fileserver design requires three independant forms of interlock : a high level interlock on updates to files which is visible to users, and two interlocks to prevent corruption of the directory structure or user table caused by two tasks simultaneously updating the same entry.  This latter interlocking is invisible to users; they expect such operations to be performed in sequence, but we wish to overlap the disc transfers for one operation with the procesing of another if there is no conflict.The file interlocks are achieved by holding a file control block for each open file in the memory of the file server.  This holds the disc address of the directory entry describing the file and the access requested (read, read/write or extend).  Any attempt to delete or open a file causes a search of all active file control blocks for references to that file; prohibited operations (such as deleting an open file) are reported to the user.Each client's current directory, user root directory (or 'home' directory) and library are also allocated file control blocks; this prevents these directories from being deleted and so allows disc addresses to be used rather than looking up the whole path name for each access.  Clients can also open other directories and use them to specify different 'current' directories.The Econet protocols enforce a maximum of 8 file control blocks per user, and in this file server each client has the full allocation available.  This means that each client requires about 140 bytes of memory.Updates to the active user table are straightforward.  As the table is in main memory, most updates can be completed without the possibility of other tasks becoming active.  The only type of update which requires care is when a file is opened, as this requires disc transfers.  In this case, ..........The low level interlocks are required to prevent conflicts caused by one task modifying a directory while another is suspended waiting for disc transfers in the middle of an operation on that directory which is meant to be atomic.  The following operations are performed on directories :|i10|t6 1) Display catalogue.|t6 2) Find a named object prior to some operation on that object (eg. OPEN, *info)|t6 3) Create object.|t6 4) Delete object.|t6 5) Rename object (This causes substantial difficulties, and is discussed later).|i