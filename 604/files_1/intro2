|\ intro2While the functions of a printer server are logically separate from those of a fileserver, in the case of Econet there are a number of advantages to be gained by integration :|i10|t7a) Econet is a low cost system, and users are sensitive to the cost of adding extra stations to perform simple functions.  While this is only a minor advantage here, it explains the lack of certain other services which, as described below, make this combination desirable.|t7b) There is no network-wide protection or authentication system : verification of user identity and password is performed by the fileserver(s).  This means that an independant printer server wishing to impose any kind of protection against unauthorised use must have an independant means for users to authenticate themselves.  Such a server would probably have to 'pretend' to be a fileserver in any case, as there is no other protocol for log-on transactions supported in the client firmware.  The issue of protection against abuse is particularly important for printer servers, as this is the only service on a typical Econet where malicious users can consume resources of monetary value.|t7c) There is no time of day service on the network.  Most fileservers have some sort of clock, but some offer only the date, while others have none at all.  The lack of a nameserver makes it difficult to locate the best source of time information without manual intervention.  A printer server which is integrated into a fileserver containing an adequate clock avoids this problem.|t7d) It is very desirable to offer spooling of printer output.  Very few clients will have a multi-tasking capability to poll for the printer being free and print out a file automatically.  Furthermore, users of standard BBC computers attempting to use the printer server when it is busy do not receive a message to that effect.  Incredibly, the printer server protocol provides no facility to report errors to the client, and so after about 30 seconds of abortive attempts to send data to the printer the firmware will report a |vNot listening|z error, as if the printer server did not exist.  An independant printer server could use a fileserver to hold spooled data, but this means that the data makes three trips across the network, consuming substantial network bandwidth, especially if graphical data is being printed.  There are also the problems of locating a suitable fileserver and protection problems in giving the printer server privileges on that fileserver.|iA spooling printer server requires no special additions to the fileserver hardware, apart from the interface to the printer itself.  A certain amount of memory will be required to hold the program and data structures, and the disc system will need to be faster and of greater capacity than might otherwise have been acceptable.  The deficiencies of the printer protocol mean that it is essential to avoid running out of disc space; this, coupled with the speed required, means that floppy discs would probably be inadequate for such a server.|u1.2 System architectureThe requirements of multi-tasking, and the desire to divide the software into more manageable units, led to the use of two processors.  The main processor, whose software is the subject of this project, maintains the directory structure and services all client requests coming from the network.  A slave processor, with the aid of direct memory access hardware, controls all peripheral transfers, freeing the main processor for multi-tasking.  A large cache memory is provided : the slave processor controls this to queue blocks being written to disc, and to provide rapid access to frequently referenced blocks.  The main processor can overlap the processing of other tasks with the operation of searching the cache for a desired block and reading it from disc if necessary.|a35|u|cHardware block diagramIt may be noted that this architecture does not allow the main processor to control the order in which blocks are written to disc.  This means that the integrity of the filing system after a system crash or power failure cannot be guaranteed.  Although it would have been possible to arrange control over writing, a deliberate decision was made not to do so.  Experience with existing fileservers indicates that crashed systems usually continue running long enough to corrupt the disc (the example of an Acorn fileserver which spontaneously entered the FORMAT routine and erased the whole disc, comes to mind).  In view of this, it was thought that the costs of an intention / commit mechanism - making shadow copies of all changes to the directory structure - were not justified by the small increase in security.  The hardware design provides for sufficient battery power to allow the system to close down correctly in the event of mains failure.|w|gdatastruc