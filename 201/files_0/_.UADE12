 :    ********************************* :    *                               * :    * FILE :UADE12                  * :    *                               * :    * PROGRAM :TUNER                * :    *                               * :    * DISK :TUNING                  * :    *                               * :    * AUTHOR :MEL                   * :    *                               * :    * DATE CREATED :22/10/81        * :    *                               * :    * DATE CHANGED :9/1/82          * :    *                               * :    * CONTENTS :TUNING CODE         * :    ********************************* : : : :     START - CLEAR THE  SCREEN : :START LDAIM $16  Set vdu mode 7 : JSR OSWRCH : LDAIM $07 : JSR OSWRCH : : CLD       OOPS : : :    ARRANGE 16 DISPLAY ROWS :    FROM ROW 3 TO ROW 19 :    SET UP THE CONTROL CODES :    ON THE SCREEN :    BACKGROUND IS YELLOW :    AND COLOUR IS BLUE : : : LDXIM DISPST : :    SET UP ROW POINTER : :SETLPA LDAAX ROWBOT : STA DESTIN : LDAAX ROWTOP : CLC : ADCIM SCRST / : STAZ DESTIN +01 : :    LOAD COLOUR SETTING CHARS : : LDYIM $00 : :SETLPB LDAAY YELLB : STAIY DESTIN : INY : CPYIM $03 : BNE SETLPB : INX : :    ORIGINAL ASSEMBLY TRIED DISPS+16 : CPXIM DSPEND    CHECK PLANTED ALL ROWS : BNE SETLPA : : :    NOW SET UP TWO ROWS :    FOR FIELD SYNCS AND FRAMING CODE :    LOAD BACKGROUND CHAR IN SECOND :    POSITION AND SET BLUE OR YELLOW :    COLOUR ON SUCCESS OR FAILURE :    ALSO SET ALPHA COLOURS : : LDA BACKG : STA FSDISP +01 : STA FCDISP +01 : :    SET CHAR STRINGS INTO THE  :    TWO INDICATOR ROWS - ONE :    FOR FIELD SYNCS AND ONE :    FOR FRAMING CODES : : :    SET THE COLOUR TO YELLOW :    SO THAT ONLY ON SUCCESS :    WILL THE CHARS SHOW :    AS BACKGROUND IS CHANGED :    FROM YELLOW TO BLUE : : LDA YELLA : STA FCDISP +02 : STA FSDISP +02 : :    LOAD THE TWO STRIGS IN : LDYIM $00 :FCMLP LDAAY FCSTR : STAAY FCDISP +03 : INY : CPY FCLEN : BNE FCMLP : : LDYIM $00 :FSMLP LDAAY FSSTR : STAAY FSDISP +03 : INY : CPY FSLEN : BNE FSMLP : : : : :    CLEAR FIRST BYTES OF ALL :    TTXT ROWS IN THE DECODER :    THESE ARE USED AS FLAG BYTES :    TO INDICATE DECODER HAS WRITTEN :    THE ROWS : : : LDXIM $0F : LDAIM $00 : :CLRROW STX ROWREG : STA DATINP : DEX : BNE CLRROW : : :    NOW STITCH UP INTERRUPT CODE :    TO CHECK FOR DECODER INTS :    BEFORE NORMAL INTERRUPT SERVICE : : : LDA INTVEC : STAZ GOON : LDA INTVEC +01 : STAZ GOON +01 : : LDAIM INTSRV : STA INTVEC : LDAIM INTSRV / : STA INTVEC +01 : : :    NOW ENABLE INTERRUPTS FROM :    THE DECODER AFTER FIELD SYNCS : : : LDAIM $0C : STA STATUS : STA DATCLR : : :    NOW SWITCH INTERRUPTS ENABLED : : : CLI : : :    NOW DO A NULL LOOP :    THIS CONTINUALLY CLEARS :    ROWS THAT HAVE BEEN DISPLAYED :    AS HAVING VALID DATA :    THIS REQUIRES HEX 2B AT COL 3 :    IN ROWS 3 TO 19 :    THE LOOP LOOKS AT <ESC> TO SEE :    IF USER WANTS OUT : : :NULL LDXIM DSPEND : :NULA LDYIM $03 : LDAAX ROWBOT : STAZ NULPTR   USE A SEPARATE DATA : LDAAX ROWTOP   AREA FOR THIS POINTER : CLC : ADCIM SCRST / : STAZ NULPTR +01 : :    NOW LOOK IF A FRAMING CODE :     OR ANY OTHER BYTE WAS FOUND :    IN THE DECODER ROW : : LDAIY NULPTR : BEQ NULC : LDYIM $25     START CLEARING AT END : LDAIM $00     OF ROW : :NULB STAIY NULPTR : DEY : CPYIM $02  CLEAR TO COL 3 : BNE NULB : :NULC DEX : CPXIM DISPST : BNE NULA : : LDYIM $FF   ENORMOUS DELAY : LDXIM $FF   TO ALLOW US TO SEE :TIMLP DEX    THE DISPLAY : BNE TIMLP : DEY : BNE TIMLP : BIT $00FF : BPL NULL : : : :     NOW SWITCH IT ALL OFF AND EXIT :     DISABLE INTERRUPTS FROM :     THE DECODER : : LDAIM $00 : STA STATUS : :    DONT!!!! DISABLE SYSTEM INTERRUPTS : :    SEI : : :    UNSTITCH INTERRUPT VECTOR : : : LDAZ GOON +01 : STA INTVEC +01   OOPS : LDAZ GOON : STA INTVEC : : :     EXIT : : RTS : : : : :    INTERRUPT SERVICE SKIP CODE : :INTSRV BIT STATUS : BMI YESUS : JMI GOON     NORMAL SERVICE : : :YESUS    TXA    ACC,X,Y  ALREADY SAVED ! :   PHA   SAVE THE X REG :   TYA :   PHA   SAVE THE Y REG : : : : : : :     NOW THE MAIN INTERRUPT CODE : : LDAIM $0F : STAZ ROWCNT : : LDA STATUS   SAVE THE ORIG. STATUS : STAZ LASSTA : : : :   SET UP DESTINATION POINTER :   TO POINT TO A SCREEN ROW :   CLEAR THE Y REG : : :TUNLPA LDAZ ROWCNT : STA ROWREG : CLC : ADCIM DISPST : TAX : LDAAX ROWBOT : STAZ DESTIN : LDAAX ROWTOP : CLC : ADCIM SCRST / : STAZ DESTIN +01 :        Y REG IS OFFSET REG : : LDYIM $03  START AT COL 3 : : LDA DATINP CHECK FRAMING CODE :     IF FAIL GO TO END OF ROW LOOP : BEQ TUNOTA : : CMPIM $27 : BNE FCFAIL : LDAIM GOOD : BNE FCSEND : :FCFAIL LDAIM BAD : :FCSEND STAIY DESTIN : :     NOW CLEAR OUT THE FRAMING CODE :     IN THE FIRST BYTE POSITION : : LDAZ ROWCNT : STA ROWREG : LDAIM $00 : STA DATINP : :     BUMP THE DISPLAY OFFSET : : INY : : :    NOW CHECK FOR TWO HAMMING TYPE :    BYTES FIRST CHECK BY LOOKUP :    IN FULL HAMMING TABLE AND FAIL :    IF MORE THAN ONE BIT IN ERROR :    THEN CHECK SINGLE BIT IN ERROR :    BY RECONVERTING TO CORRECT HAM :    VALUE AND COMPARING ORIGINAL : : : LDAIM $02 : STAZ LOOPCT : :HMLOOP LDA DATINP : STA TEMP : TAX : LDAAX HAMTAB : CMPIM $0F : BEQ HMFAIL : TAX : LDA TEMP : CMPAX HAMCOD : BNE HMFAIL : LDAIM GOOD : BNE HMSEND : :HMFAIL LDAIM BAD : :HMSEND STAIY DESTIN : INY : DEC LOOPCT : BNE HMLOOP : : :   NOW SKIP 8 BYTES THAT ARE HAM :   CODED IF A HEADER AND ODD :   PARITY IF AN ORDINARY ROW : : : LDXIM $08 : :SKLOOP LDA DATINP : DEX : BNE SKLOOP : : :     NOW DO ODD PARITY CHECK :     FOR 32 BYTES :    ** NOTE THAT THIS WILL :       NOT WORK WHEN EXTRA :       ROWS ARE TRANSMITTED AS :       THEY WILL NOT BE IN THE :       SAME FORMAT AND SO SOME :       CHECKING OF DATA CONTENT :       WILL BE NECCESSARY : : : : LDAIM $20 : STAZ LOOPCT : :OPLOOP LDA DATINP    START OF TERCODE : STAZ TEMP : ASLA : ASLA : ASLA : ASLA : EORZ TEMP : STAZ TEMP : ASLA : ASLA : EORZ TEMP : STAZ TEMP : ASLA : EORZ TEMP : BMI OPPASS : LDAIM BAD : BNE OPSEND : :OPPASS LDAIM GOOD : :OPSEND STAIY DESTIN : : INY : DEC LOOPCT : BNE OPLOOP : : :     NOW CHECK THE NEXT ROW :     UNTIL ROW 3 : : :TUNOTA DEC ROWCNT : BEQ INVERS : JMP TUNLPA : : :     NOW CHECK FOR FS AND FC :     USE PRESCENCE OR ABSENCE :     TO SET A YELLOW OR BLUE  :     BACKGROUND ON ROWS 22 AND 23 : : :INVERS LDAIM FSMASK : BITZ LASSTA : BEQ FSFAIL : LDA BLUEB : BNE FSSEND : :FSFAIL LDA YELLB : :FSSEND STA FSDISP : : : LDAIM FSMASK   Framing code detect not available on kimcoder : BITZ LASSTA : BEQ FCBFAL : LDA BLUEB : BNE FCBSND : :FCBFAL LDA YELLB : :FCBSND STA FCDISP : : :       EXIT INTERRUPT CODE : : STA DATCLR  Allow further interrupts : PLA : TAY : PLA : TAX   FIRST X,Y REGS : LDA $00FC : RTI : : : :     +++ END OF UADE12 :