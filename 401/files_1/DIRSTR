.x||\ DIRstr|T8,18,26,34|f|k15/1/84|c|u|uDirectory Format DefinitionEach directory is an object like a file, and contains a number of entries. Disc allocation is performed in 1K blocks and each block number is of 2 bytes, allowing 64 Mbytes for each logical disc. The entries form linked lists to allow easy alphabetic sorting, each link being an entry number rather than a byte offset. The entries are fixed at 64 bytes each. End of each list is indicated by a link to zero. Entry zero is not actually an entry at all, but contains extra information about the other entries, in particular whether they have been deleted.Entries are numbered 0..255 starting from the lowest offset in the first block in the block list. Note that 'lowest' and 'first' are in the conventional sense of ascending memory addresses, not as for Pascal-Z.A directory entry has space for 16 block numbers. These either point to the blocks containing the file data (for a short file) or to blocks containing the block numbers of the actual file. The two level state is described as 'exploded'.Directories must be described by an unexploded directory entry : this saves much trouble and means that the entry numbers fit in one byte. 255 directory entries should be more than enough.All multi-byte numbers are low byte first (Z80 style)|vDirectory entry format:|z |v(file)|zByte 	  0   	Account number from whose allocation this file was takenBytes	  1-10	File name, terminated <cr> if less than 10 chars.Byte 	 11   	Entry no of next entry in chain, points to self if deleted		 equals 0 if end of chainBytes	 12-15	Load addressBytes	 16-19	Execute addressBytes	 20-22	File extentByte 	 23   	Access byte - 7 lower bits in order P0LWR/WR (0 in D bit)Bytes	 24-25	Creation date (Day, Month-Year)Bytes	 26-29	Last update date then time (Day, Month-Year, Hours, Mins.		 Note: No seconds)Byte 	 30   	Auxiliary accountByte 	 31   	Explosion state : bit 0 =1 for exploded (other bits currently =0)Bytes	 32-63	Block list : 16 blocks (2 bytes each) (=0 if not allocated)		 Note: First block at lowest offset.|vDirectory entry format:|z |v(sub-directory)|zByte 	  0   	Account number from whose allocation this dir was takenBytes	  1-10	Directory name, terminated <cr> if less than 10 chars.Byte 	 11   	Entry no of next entry in chain, points to self if deleted		equals 0 if end of chainByte 	 12   	Contains the default access for new files - P0LWR/WR.Byte 	 13   	Cycle numberBytes	 14-15	blockno of 'parent' directory entryByte 	 16   	offset in block of parent dirByte 	 17   	Number of files in dir.Bytes	 18-22	Spare : equals 0Byte 	 23   	Access byte - 7 lower bits in order P1LWR/WR (1 in D bit)Bytes	 24-25	Creation date (Day, Month-Year)Bytes	 26-29	Last update date then time (Day, Month-Year, Hours, Mins.		 Note: No seconds)Byte 	 30   	Default auxiliary accountByte 	 31   	Contains explosion state (always equals 0)Bytes	 32-63	Block list : 16 blocks (2 bytes each) (=0 if not allocated)		 Note: First block at lowest offset.|a17|vDirectory entry format:|z |v(Entry 0)|zDirectory entry 0 in each directory contains further information about the other directory entries.Bytes	  0-31	Bit map of directory entries - bit =0 for entry free.		Bit 0 of byte 0 refers to directory entry 0, (always =1)Bytes	 32-62	Fifteen 2-byte pointers to starts of chains:		Byte	 0	no. of entries in this chain		Byte	 1	entry no. of 1st entry in chain. =0 if none.		Chain	 0	All less than 'A'		Chains	 1-13	Alphabetic		Chain	14	Greater than 'Z'		Note: Chain 0 is the first one and chain 14 is the last one.Bytes	 62-63	Spare (=0)|uExplosion blocks:These are blocks containing just block numbers. The blocks of the file are in order starting at the lowest memory address in the first explosion block (Note that these are 16 bit integers, so the low byte comes first, as usual).|uBlock zero format:Block 0 on each disc contains various information. At offset 0 is a directory entry which points to the root.Bytes	  0-63	Standard format directory entry pointing to the RootBytes	 64-86 	Contains 'SJ Research File Server'Bytes	 87-96 	Name of disc (terminated <cr> if < 10 chars)Byte	 97	Double sided flag (0 = False, 255 = True)Bytes	 98-99	Total number of blocks on this discBytes	100-511	Spare (=0)Bytes	512-1023	Vector of blocks left for each account (2 bytes each)|f|uThe END.