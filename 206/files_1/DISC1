 ; File DISC1 ; ; ; FUNCTION Size(fblk:fcb):dbl_word ; ; Returns the length of the file as a 4 byte quantity. ; ;SIZE POP H ; Return POP D ; FCB address CALL FCBtrans ; get addr. of START of FCB PUSH H PUSH D ; In case CP/M slurps it MVI C,23H CALL BDOS ; Compute file size POP D LXI H,21H ; Offset to r0 DAD D MOV E,M MVI D,0 INX H MOV B,M INX H MOV C,M ; Now have 3 bytes in regs CBED (hi to lo). ; Since CP/M Counts in 128 byte records, now shift the whole thing right SRLR C RRAR B RRAR E RRAR D POP H ; Return addr POP PSW ; Returned value slots POP PSW PUSH D PUSH B ; Return value XRA A ; A=0 PCHL ; Jump to return addr ; ; ; ; FUNCTION Dir_first(fblk:fcb;address:INTEGER):BYTE; ;  ; Performs a CP/M search-for-first function, returning the ; directory code, with the DMA address set as specified. ;DIR_FIRST POP B ; Return POP H ; Address POP D ; FCB address CALL FCBtrans ; get addr. of START of FCB PUSH B PUSH D XCHG ; Address to DE MVI C,1AH ; Set DMA code CALL BDOS ; Address in DE ; POP D ; FCB addr to DE MVI C,11H ; Search first CALL BDOS MOV E,A ; Return value XRA A MOV D,A ; Hi byte of return RET ; ; ; ; ; FUNCTION Dir_next(fblk:fcb;address:INTEGER):BYTE; ;  ; Performs a CP/M search-for-next function, returning the ; directory code, with the DMA address set as specified. ;DIR_NEXT POP B ; Return POP H ; Address POP D ; FCB address CALL FCBtrans PUSH B PUSH D XCHG ; Address to DE MVI C,1AH ; Set DMA code CALL BDOS ; Address in DE ; POP D ; FCB addr to DE MVI C,12H ; Search next CALL BDOS MOV E,A ; Return value XRA A MOV D,A ; Hi byte of return RET ; ; ; ; ; ; PROCEDURE CLOSE(fblk:fcb); ; Close given fileCLOSE POP H POP D PUSH H CALL FCBtrans MVI C,010H ; Close file CALL BDOS XRA A RET ; ; ; ; Procedure Disc_reset; ; ; Reset disc system so discs are not R/O ! ;DISC_RES MVI C,0DH ; Reset disc system CALL BDOS XRA A RET ; ; ; FCBTRANS - Takes END address of FCB in DE and returns START ; All other regs preserved. ;FCBTRANS PUSH H ; Save in case it's got sumthink in it LXI H,-fcboff DAD D XCHG ; Result back in DE POP H RET ; ; ; ; ; DATA ;temp1 DS 2temp2 DS 2CSD_addtemp3 DS 2 ;FCB DS 24H ; ; ;