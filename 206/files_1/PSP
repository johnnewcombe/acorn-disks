{ PSP  File Server Procedures & Functions }External FS::fsp3(3);{$E+  Extended error messages}{$C- No ctrl-C check}{$L- No listing}PROCEDURE Starcmd;VAR cmd_text:min_string;result,cmd_code:byte;a:Integer;BEGINGETSTRCR(ADDR2(mainRX)-min_size+1,min_size,cmd_text);Msg('Stn:');Msg(stn$(client_stn));Msg(' *');Msgln(cmd_text);cmd_code:=CLI(cmd_text);CASE cmd_code OF   5:I_am(cmd_text); 119:BEGIN no_banner:=TRUE;Extract$(banner,cmd_text);ReplyOK END; 120:BEGIN extract$(end_text,cmd_text);ReplyOK END 121:BEGIN extract$(post_text,cmd_text);ReplyOK END; 122:BEGIN extract$(pre_text,cmd_text);ReplyOK END; 123:BEGIN extract$(banner,cmd_text); no_banner:=FALSE;ReplyOK END; 125:Log_off; {*BYE} ELSE:Txerr('Not a recognised Printer Server command',1)END; {case}MsglineEND;Procedure Do_logoff;BEGINFOR user_no:=1 to no_users DO IF user_info[user_no].stn=client_stn THEN  user_info[user_no].logged_on:=FALSE{****** should close all open files here *******}END;Procedure I_am(VAR cmd_text:min_string);VAR a,result:BYTE;BEGINDo_logoff;user_no:=1;WHILE user_info[user_no].logged_on AND (user_no<no_users) DO  user_no:=Succ(user_no);With user_info[user_no] DO IF logged_on THEN Err_message(184)ELSE BEGIN  {First get hold of user name}  a:=1;  WHILE ((cmd_text[a]<'!') OR ((cmd_text[a]>='0')AND(cmd_text[a]<='9')))     AND (a<=Length(cmd_text)) DO a:=succ(a);  Mid$(cmd_text,a-1,3); {**TEMP max 3 char user ID**}  IF (Length(cmd_text)=0) THEN cmd_text:='$';  logged_on:=TRUE;  user_ID:=cmd_text;  stn:=client_stn;  fcbs[1].drive:=1; {Default to A:}  fcbs[1].in_use:=TRUE;  mainTX.cmd:=5;  mainTX.rtncode:=0;  mainTx.data[min_size]:=1; {URD handle}  mainTx.data[min_size-1]:=1; {CSD handle}  mainTx.data[min_size-2]:=1; {LIB handle}  mainTx.data[min_size-3]:=0; {Boot option (Don't !)}  TRANSMIT(0,mainRX.reply,client_stn,addrint(mainTX.data[min_size-3])    ,6,result);  IF result<128 THEN notlisteningENDEND;FUNCTION User_ok:BOOLEAN;BEGINuser_no:=1;WHILE (user_info[user_no].stn<>client_stn) AND (user_no<>no_users) DO  user_no:=succ(user_no);User_ok:=(user_info[user_no].stn=client_stn) AND user_info[user_no].logged_onEND;PROCEDURE Log_off;BEGINDo_logoff;ReplyokEND;.